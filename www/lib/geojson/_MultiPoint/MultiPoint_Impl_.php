<?php
/**
 * Generated by Haxe 4.0.0-rc.1+1fdd3d5
 * Haxe source file: /Users/ut/haxe/haxe_libraries/geojson/0.9.7/haxelib/src/geojson/MultiPoint.hx
 */

namespace geojson\_MultiPoint;

use \tink\json\_Representation\Representation_Impl_;
use \php\_Boot\HxAnon;
use \php\Boot;
use \php\_Boot\HxException;

final class MultiPoint_Impl_ {

	/**
	 * @param \Array_hx $points
	 * 
	 * @return object
	 */
	static public function _new ($points) {
		#/Users/ut/haxe/haxe_libraries/geojson/0.9.7/haxelib/src/geojson/MultiPoint.hx:10: character 2
		$this1 = new HxAnon([
			"type" => "MultiPoint",
			"coordinates" => $points,
		]);
		return $this1;
	}

	/**
	 * @param object $rep
	 * 
	 * @return object
	 */
	static public function fromRepresentation ($rep) {
		#/Users/ut/haxe/haxe_libraries/geojson/0.9.7/haxelib/src/geojson/MultiPoint.hx:29: characters 10-19
		$_g = Representation_Impl_::get($rep);
		#/Users/ut/haxe/haxe_libraries/geojson/0.9.7/haxelib/src/geojson/MultiPoint.hx:30: lines 30-31
		if ($_g->type === "MultiPoint") {
			#/Users/ut/haxe/haxe_libraries/geojson/0.9.7/haxelib/src/geojson/MultiPoint.hx:30: characters 39-52
			return $_g;
		} else {
			#/Users/ut/haxe/haxe_libraries/geojson/0.9.7/haxelib/src/geojson/MultiPoint.hx:31: characters 13-18
			throw new HxException("Invalid MultiPoint");
		}
	}

	/**
	 * @param object $this
	 * 
	 * @return \Array_hx
	 */
	static public function get_points ($this1) {
		#/Users/ut/haxe/haxe_libraries/geojson/0.9.7/haxelib/src/geojson/MultiPoint.hx:16: characters 30-53
		return $this1->coordinates;
	}

	/**
	 * @param object $this
	 * 
	 * @return string
	 */
	static public function get_type ($this1) {
		#/Users/ut/haxe/haxe_libraries/geojson/0.9.7/haxelib/src/geojson/MultiPoint.hx:18: characters 29-45
		return $this1->type;
	}

	/**
	 * @param object $this
	 * @param \Array_hx $v
	 * 
	 * @return \Array_hx
	 */
	static public function set_points ($this1, $v) {
		#/Users/ut/haxe/haxe_libraries/geojson/0.9.7/haxelib/src/geojson/MultiPoint.hx:17: characters 31-58
		return $this1->coordinates = $v;
	}

	/**
	 * @param object $this
	 * 
	 * @return object
	 */
	static public function toGeoJson ($this1) {
		#/Users/ut/haxe/haxe_libraries/geojson/0.9.7/haxelib/src/geojson/MultiPoint.hx:19: characters 44-60
		return $this1;
	}

	/**
	 * @param object $this
	 * 
	 * @return object
	 */
	static public function toRepresentation ($this1) {
		#/Users/ut/haxe/haxe_libraries/geojson/0.9.7/haxelib/src/geojson/MultiPoint.hx:24: characters 10-49
		$this2 = $this1;
		return $this2;
	}
}

Boot::registerClass(MultiPoint_Impl_::class, 'geojson._MultiPoint.MultiPoint_Impl_');
Boot::registerGetters('geojson\\_MultiPoint\\MultiPoint_Impl_', [
	'type' => true,
	'points' => true
]);
Boot::registerSetters('geojson\\_MultiPoint\\MultiPoint_Impl_', [
	'points' => true
]);

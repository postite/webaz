<?php
/**
 * Generated by Haxe 4.0.0-rc.1+1fdd3d5
 * Haxe source file: /Users/ut/haxe/haxe_libraries/geojson/0.9.7/haxelib/src/geojson/util/Line.hx
 */

namespace geojson\util\_Line;

use \php\Boot;

final class Line_Impl_ {

	/**
	 * @param \Array_hx $points
	 * 
	 * @return \Array_hx
	 */
	static public function _new ($points) {
		#/Users/ut/haxe/haxe_libraries/geojson/0.9.7/haxelib/src/geojson/util/Line.hx:8: character 2
		return $points;
	}

	/**
	 * @param \Array_hx $this
	 * 
	 * @return \Array_hx
	 */
	static public function get_points ($this1) {
		#/Users/ut/haxe/haxe_libraries/geojson/0.9.7/haxelib/src/geojson/util/Line.hx:11: characters 31-42
		return $this1;
	}

	/**
	 * @param \Array_hx $this
	 * @param \Array_hx $v
	 * 
	 * @return \Array_hx
	 */
	static public function set_points ($this1, $v) {
		#/Users/ut/haxe/haxe_libraries/geojson/0.9.7/haxelib/src/geojson/util/Line.hx:12: characters 39-47
		$this1 = $v;
		#/Users/ut/haxe/haxe_libraries/geojson/0.9.7/haxelib/src/geojson/util/Line.hx:12: characters 32-47
		return $v;
	}
}

Boot::registerClass(Line_Impl_::class, 'geojson.util._Line.Line_Impl_');
Boot::registerGetters('geojson\\util\\_Line\\Line_Impl_', [
	'points' => true
]);
Boot::registerSetters('geojson\\util\\_Line\\Line_Impl_', [
	'points' => true
]);

<?php
/**
 * Generated by Haxe 4.0.0-rc.2+77068e1
 * Haxe source file: /Users/ut/haxe/haxe_libraries/tink_streams/0.3.2/haxelib/src/tink/streams/Stream.hx
 */

namespace tink\streams\_Stream;

use \php\_Boot\HxAnon;
use \tink\core\_Future\SyncFuture;
use \php\Boot;
use \tink\streams\RegroupResult;
use \tink\core\Outcome;
use \tink\core\_Lazy\LazyConst;
use \tink\core\_Promise\Recover_Impl_;
use \tink\core\_Promise\Promise_Impl_;

final class Mapping_Impl_ {
	/**
	 * @param object $o
	 * 
	 * @return object
	 */
	static public function _new ($o) {
		#/Users/ut/haxe/haxe_libraries/tink_streams/0.3.2/haxelib/src/tink/streams/Stream.hx:272: character 3
		return $o;
	}

	/**
	 * @param \Closure $f
	 * 
	 * @return object
	 */
	static public function ofAsync ($f) {
		#/Users/ut/haxe/haxe_libraries/tink_streams/0.3.2/haxelib/src/tink/streams/Stream.hx:281: lines 281-283
		$this1 = new HxAnon(["apply" => function ($i, $_)  use (&$f) {
			#/Users/ut/haxe/haxe_libraries/tink_streams/0.3.2/haxelib/src/tink/streams/Stream.hx:282: characters 47-106
			$ret = $f(($i->arr[0] ?? null))->map(function ($o) {
				#/Users/ut/haxe/haxe_libraries/tink_streams/0.3.2/haxelib/src/tink/streams/Stream.hx:282: characters 71-105
				return RegroupResult::Converted(Stream_Impl_::single($o));
			});
			#/Users/ut/haxe/haxe_libraries/tink_streams/0.3.2/haxelib/src/tink/streams/Stream.hx:282: characters 47-106
			return $ret->gather();
		}]);
		#/Users/ut/haxe/haxe_libraries/tink_streams/0.3.2/haxelib/src/tink/streams/Stream.hx:281: lines 281-283
		return $this1;
	}

	/**
	 * @param \Closure $n
	 * 
	 * @return object
	 */
	static public function ofNext ($n) {
		#/Users/ut/haxe/haxe_libraries/tink_streams/0.3.2/haxelib/src/tink/streams/Stream.hx:276: lines 276-278
		$this1 = new HxAnon(["apply" => function ($i, $_)  use (&$n) {
			#/Users/ut/haxe/haxe_libraries/tink_streams/0.3.2/haxelib/src/tink/streams/Stream.hx:277: characters 47-124
			$this2 = Promise_Impl_::next($n(($i->arr[0] ?? null)), function ($o) {
				#/Users/ut/haxe/haxe_libraries/tink_streams/0.3.2/haxelib/src/tink/streams/Stream.hx:277: characters 72-106
				return new SyncFuture(new LazyConst(Outcome::Success(RegroupResult::Converted(Stream_Impl_::single($o)))));
			});
			#/Users/ut/haxe/haxe_libraries/tink_streams/0.3.2/haxelib/src/tink/streams/Stream.hx:277: characters 47-124
			$f = Recover_Impl_::ofSync(Boot::getStaticClosure(RegroupResult::class, 'Errored'));
			$ret = $this2->flatMap(function ($o1)  use (&$f) {
				$__hx__switch = ($o1->index);
				if ($__hx__switch === 0) {
					$d = $o1->params[0];
					return new SyncFuture(new LazyConst($d));
				} else if ($__hx__switch === 1) {
					$e = $o1->params[0];
					return $f($e);
				}
			});
			return $ret->gather();
		}]);
		#/Users/ut/haxe/haxe_libraries/tink_streams/0.3.2/haxelib/src/tink/streams/Stream.hx:276: lines 276-278
		return $this1;
	}

	/**
	 * @param \Closure $f
	 * 
	 * @return object
	 */
	static public function ofPlain ($f) {
		#/Users/ut/haxe/haxe_libraries/tink_streams/0.3.2/haxelib/src/tink/streams/Stream.hx:294: lines 294-296
		$this1 = new HxAnon(["apply" => function ($i, $_)  use (&$f) {
			#/Users/ut/haxe/haxe_libraries/tink_streams/0.3.2/haxelib/src/tink/streams/Stream.hx:295: characters 47-93
			return new SyncFuture(new LazyConst(RegroupResult::Converted(Stream_Impl_::single($f(($i->arr[0] ?? null))))));
		}]);
		#/Users/ut/haxe/haxe_libraries/tink_streams/0.3.2/haxelib/src/tink/streams/Stream.hx:294: lines 294-296
		return $this1;
	}

	/**
	 * @param \Closure $f
	 * 
	 * @return object
	 */
	static public function ofSync ($f) {
		#/Users/ut/haxe/haxe_libraries/tink_streams/0.3.2/haxelib/src/tink/streams/Stream.hx:286: lines 286-291
		$this1 = new HxAnon(["apply" => function ($i, $_)  use (&$f) {
			#/Users/ut/haxe/haxe_libraries/tink_streams/0.3.2/haxelib/src/tink/streams/Stream.hx:287: lines 287-290
			$v = null;
			#/Users/ut/haxe/haxe_libraries/tink_streams/0.3.2/haxelib/src/tink/streams/Stream.hx:287: characters 66-73
			$_g = $f(($i->arr[0] ?? null));
			$__hx__switch = ($_g->index);
			if ($__hx__switch === 0) {
				#/Users/ut/haxe/haxe_libraries/tink_streams/0.3.2/haxelib/src/tink/streams/Stream.hx:288: characters 22-23
				$v1 = $_g->params[0];
				#/Users/ut/haxe/haxe_libraries/tink_streams/0.3.2/haxelib/src/tink/streams/Stream.hx:287: lines 287-290
				$v = RegroupResult::Converted(Stream_Impl_::single($v1));
			} else if ($__hx__switch === 1) {
				#/Users/ut/haxe/haxe_libraries/tink_streams/0.3.2/haxelib/src/tink/streams/Stream.hx:289: characters 22-23
				$e = $_g->params[0];
				#/Users/ut/haxe/haxe_libraries/tink_streams/0.3.2/haxelib/src/tink/streams/Stream.hx:287: lines 287-290
				$v = RegroupResult::Errored($e);
			}
			return new SyncFuture(new LazyConst($v));
		}]);
		#/Users/ut/haxe/haxe_libraries/tink_streams/0.3.2/haxelib/src/tink/streams/Stream.hx:286: lines 286-291
		return $this1;
	}
}

Boot::registerClass(Mapping_Impl_::class, 'tink.streams._Stream.Mapping_Impl_');

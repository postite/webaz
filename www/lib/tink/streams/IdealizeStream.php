<?php
/**
 * Generated by Haxe 4.0.0-rc.2+77068e1
 * Haxe source file: /Users/ut/haxe/haxe_libraries/tink_streams/0.3.2/haxelib/src/tink/streams/Stream.hx
 */

namespace tink\streams;

use \tink\core\_Future\SyncFuture;
use \php\Boot;
use \tink\core\_Lazy\LazyConst;
use \tink\core\_Future\Future_Impl_;
use \tink\core\_Future\FutureObject;

class IdealizeStream extends IdealStreamBase {
	/**
	 * @var \Closure
	 */
	public $rescue;
	/**
	 * @var StreamObject
	 */
	public $target;

	/**
	 * @param StreamObject $target
	 * @param \Closure $rescue
	 * 
	 * @return void
	 */
	public function __construct ($target, $rescue) {
		#/Users/ut/haxe/haxe_libraries/tink_streams/0.3.2/haxelib/src/tink/streams/Stream.hx:422: lines 422-425
		parent::__construct();
		#/Users/ut/haxe/haxe_libraries/tink_streams/0.3.2/haxelib/src/tink/streams/Stream.hx:423: characters 5-25
		$this->target = $target;
		#/Users/ut/haxe/haxe_libraries/tink_streams/0.3.2/haxelib/src/tink/streams/Stream.hx:424: characters 5-25
		$this->rescue = $rescue;
	}

	/**
	 * @param \Closure $handler
	 * 
	 * @return FutureObject
	 */
	public function forEach ($handler) {
		#/Users/ut/haxe/haxe_libraries/tink_streams/0.3.2/haxelib/src/tink/streams/Stream.hx:436: lines 436-449
		$_gthis = $this;
		#/Users/ut/haxe/haxe_libraries/tink_streams/0.3.2/haxelib/src/tink/streams/Stream.hx:437: lines 437-449
		return Future_Impl_::async(function ($cb)  use (&$_gthis, &$handler) {
			#/Users/ut/haxe/haxe_libraries/tink_streams/0.3.2/haxelib/src/tink/streams/Stream.hx:439: lines 439-448
			$_gthis->target->forEach($handler)->handle(function ($end)  use (&$_gthis, &$handler, &$cb) {
				$__hx__switch = ($end->index);
				if ($__hx__switch === 0) {
					#/Users/ut/haxe/haxe_libraries/tink_streams/0.3.2/haxelib/src/tink/streams/Stream.hx:442: characters 23-27
					$rest = $end->params[0];
					#/Users/ut/haxe/haxe_libraries/tink_streams/0.3.2/haxelib/src/tink/streams/Stream.hx:443: characters 16-45
					$tmp = Conclusion::Halted($rest->idealize($_gthis->rescue));
					#/Users/ut/haxe/haxe_libraries/tink_streams/0.3.2/haxelib/src/tink/streams/Stream.hx:443: characters 13-46
					$cb($tmp);
				} else if ($__hx__switch === 1) {
					#/Users/ut/haxe/haxe_libraries/tink_streams/0.3.2/haxelib/src/tink/streams/Stream.hx:444: characters 27-29
					$at = $end->params[1];
					#/Users/ut/haxe/haxe_libraries/tink_streams/0.3.2/haxelib/src/tink/streams/Stream.hx:444: characters 24-25
					$e = $end->params[0];
					#/Users/ut/haxe/haxe_libraries/tink_streams/0.3.2/haxelib/src/tink/streams/Stream.hx:445: characters 16-47
					$tmp1 = Conclusion::Clogged($e, $at->idealize($_gthis->rescue));
					#/Users/ut/haxe/haxe_libraries/tink_streams/0.3.2/haxelib/src/tink/streams/Stream.hx:445: characters 13-48
					$cb($tmp1);
				} else if ($__hx__switch === 2) {
					#/Users/ut/haxe/haxe_libraries/tink_streams/0.3.2/haxelib/src/tink/streams/Stream.hx:446: characters 23-24
					$e1 = $end->params[0];
					#/Users/ut/haxe/haxe_libraries/tink_streams/0.3.2/haxelib/src/tink/streams/Stream.hx:447: characters 13-67
					($_gthis->rescue)($e1)->idealize($_gthis->rescue)->forEach($handler)->handle($cb);
				} else if ($__hx__switch === 3) {
					#/Users/ut/haxe/haxe_libraries/tink_streams/0.3.2/haxelib/src/tink/streams/Stream.hx:441: characters 13-25
					$cb(Conclusion::Depleted());
				}
			});
		});
	}

	/**
	 * @return bool
	 */
	public function get_depleted () {
		#/Users/ut/haxe/haxe_libraries/tink_streams/0.3.2/haxelib/src/tink/streams/Stream.hx:428: characters 12-27
		return $this->target->get_depleted();
	}

	/**
	 * @return FutureObject
	 */
	public function next () {
		#/Users/ut/haxe/haxe_libraries/tink_streams/0.3.2/haxelib/src/tink/streams/Stream.hx:430: lines 430-434
		$_gthis = $this;
		#/Users/ut/haxe/haxe_libraries/tink_streams/0.3.2/haxelib/src/tink/streams/Stream.hx:431: lines 431-434
		$ret = $this->target->next()->flatMap(function ($v)  use (&$_gthis) {
			if ($v->index === 1) {
				#/Users/ut/haxe/haxe_libraries/tink_streams/0.3.2/haxelib/src/tink/streams/Stream.hx:432: characters 17-18
				$e = $v->params[0];
				#/Users/ut/haxe/haxe_libraries/tink_streams/0.3.2/haxelib/src/tink/streams/Stream.hx:432: characters 21-54
				return ($_gthis->rescue)($e)->idealize($_gthis->rescue)->next();
			} else {
				#/Users/ut/haxe/haxe_libraries/tink_streams/0.3.2/haxelib/src/tink/streams/Stream.hx:433: characters 16-35
				return new SyncFuture(new LazyConst($v));
			}
		});
		#/Users/ut/haxe/haxe_libraries/tink_streams/0.3.2/haxelib/src/tink/streams/Stream.hx:431: lines 431-434
		return $ret->gather();
	}
}

Boot::registerClass(IdealizeStream::class, 'tink.streams.IdealizeStream');

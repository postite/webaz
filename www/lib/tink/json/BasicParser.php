<?php
/**
 * Generated by Haxe 4.0.0-rc.2+77068e1
 * Haxe source file: /Users/ut/haxe/haxe_libraries/tink_json/0.9.0/haxelib/src/tink/json/Parser.hx
 */

namespace tink\json;

use \php\_Boot\HxAnon;
use \tink\core\NamedWith;
use \php\Boot;
use \tink\core\Annex;
use \tink\core\TypedError;
use \php\_Boot\HxString;
use \tink\json\_Parser\JsonString_Impl_;
use \haxe\format\JsonParser;
use \tink\json\_Parser\SliceData;

class BasicParser {
	/**
	 * @var int
	 */
	public $max;
	/**
	 * @var Annex
	 */
	public $plugins;
	/**
	 * @var int
	 */
	public $pos;
	/**
	 * @var string
	 */
	public $source;

	/**
	 * @param int $char
	 * 
	 * @return bool
	 */
	static public function isDigit ($char) {
		#/Users/ut/haxe/haxe_libraries/tink_json/0.9.0/haxelib/src/tink/json/Parser.hx:147: characters 12-34
		if ($char < 58) {
			#/Users/ut/haxe/haxe_libraries/tink_json/0.9.0/haxelib/src/tink/json/Parser.hx:147: characters 25-34
			return $char > 47;
		} else {
			#/Users/ut/haxe/haxe_libraries/tink_json/0.9.0/haxelib/src/tink/json/Parser.hx:147: characters 12-34
			return false;
		}
	}

	/**
	 * @param int $char
	 * 
	 * @return bool
	 */
	static public function startsNumber ($char) {
		#/Users/ut/haxe/haxe_libraries/tink_json/0.9.0/haxelib/src/tink/json/Parser.hx:150: characters 12-65
		if (!(($char === 46) || ($char === 45))) {
			#/Users/ut/haxe/haxe_libraries/tink_json/0.9.0/haxelib/src/tink/json/Parser.hx:150: characters 52-65
			if ($char < 58) {
				return $char > 47;
			} else {
				return false;
			}
		} else {
			#/Users/ut/haxe/haxe_libraries/tink_json/0.9.0/haxelib/src/tink/json/Parser.hx:150: characters 12-65
			return true;
		}
	}

	/**
	 * @return void
	 */
	public function __construct () {
		#/Users/ut/haxe/haxe_libraries/tink_json/0.9.0/haxelib/src/tink/json/Parser.hx:95: characters 5-35
		$this->plugins = new Annex($this);
	}

	/**
	 * @param string $s
	 * @param int $pos
	 * @param int $end
	 * 
	 * @return mixed
	 */
	public function die ($s, $pos = null, $end = null) {
		#/Users/ut/haxe/haxe_libraries/tink_json/0.9.0/haxelib/src/tink/json/Parser.hx:320: lines 320-324
		if ($pos === null) {
			#/Users/ut/haxe/haxe_libraries/tink_json/0.9.0/haxelib/src/tink/json/Parser.hx:321: characters 13-27
			$pos = $this->pos;
			#/Users/ut/haxe/haxe_libraries/tink_json/0.9.0/haxelib/src/tink/json/Parser.hx:321: characters 7-27
			$end = $pos;
		} else if ($end === null) {
			#/Users/ut/haxe/haxe_libraries/tink_json/0.9.0/haxelib/src/tink/json/Parser.hx:324: characters 7-21
			$end = $this->pos;
		}
		#/Users/ut/haxe/haxe_libraries/tink_json/0.9.0/haxelib/src/tink/json/Parser.hx:326: lines 326-327
		if ($end <= $pos) {
			#/Users/ut/haxe/haxe_libraries/tink_json/0.9.0/haxelib/src/tink/json/Parser.hx:327: characters 7-20
			$end = $pos + 1;
		}
		#/Users/ut/haxe/haxe_libraries/tink_json/0.9.0/haxelib/src/tink/json/Parser.hx:329: lines 329-331
		$range = ($end > ($pos + 1) ? "characters " . ($pos??'null') . " - " . ($end??'null') : "character " . ($pos??'null'));
		#/Users/ut/haxe/haxe_libraries/tink_json/0.9.0/haxelib/src/tink/json/Parser.hx:333: lines 333-341
		$clip = function ($s1, $maxLength, $left) {
			#/Users/ut/haxe/haxe_libraries/tink_json/0.9.0/haxelib/src/tink/json/Parser.hx:335: lines 335-341
			if (mb_strlen($s1) > $maxLength) {
				#/Users/ut/haxe/haxe_libraries/tink_json/0.9.0/haxelib/src/tink/json/Parser.hx:336: lines 336-339
				if ($left) {
					#/Users/ut/haxe/haxe_libraries/tink_json/0.9.0/haxelib/src/tink/json/Parser.hx:337: characters 13-52
					return "... " . (mb_substr($s1, mb_strlen($s1) - $maxLength, null)??'null');
				} else {
					#/Users/ut/haxe/haxe_libraries/tink_json/0.9.0/haxelib/src/tink/json/Parser.hx:339: characters 13-44
					return (mb_substr($s1, 0, $maxLength)??'null') . " ...";
				}
			} else {
				#/Users/ut/haxe/haxe_libraries/tink_json/0.9.0/haxelib/src/tink/json/Parser.hx:341: characters 11-12
				return $s1;
			}
		};
		#/Users/ut/haxe/haxe_libraries/tink_json/0.9.0/haxelib/src/tink/json/Parser.hx:343: characters 5-27
		$p = $pos + $end;
		#/Users/ut/haxe/haxe_libraries/tink_json/0.9.0/haxelib/src/tink/json/Parser.hx:344: characters 5-25
		$center = $p >> 1;
		#/Users/ut/haxe/haxe_libraries/tink_json/0.9.0/haxelib/src/tink/json/Parser.hx:345: characters 5-226
		$context = ($clip(HxString::substring($this->source, 0, $pos), 20, true)??'null') . "  ---->  " . ($clip(HxString::substring($this->source, $pos, $center), 20, false)??'null') . ($clip(HxString::substring($this->source, $center, $end), 20, true)??'null') . "  <----  " . ($clip(HxString::substring($this->source, $end), 20, false)??'null');
		#/Users/ut/haxe/haxe_libraries/tink_json/0.9.0/haxelib/src/tink/json/Parser.hx:347: characters 5-129
		return TypedError::withData(422, ($s??'null') . ((" at " . ($range??'null') . " in " . ($context??'null'))??'null'), new HxAnon([
			"source" => $this->source,
			"start" => $pos,
			"end" => $end,
		]), new HxAnon([
			"fileName" => "tink/json/Parser.hx",
			"lineNumber" => 347,
			"className" => "tink.json.BasicParser",
			"methodName" => "die",
		]))->throwSelf();
	}

	/**
	 * @return SliceData
	 */
	public function doParseNumber () {
		#/Users/ut/haxe/haxe_libraries/tink_json/0.9.0/haxelib/src/tink/json/Parser.hx:160: characters 5-60
		return $this->slice($this->skipNumber(\StringTools::fastCodeAt($this->source, $this->pos++)), $this->pos);
	}

	/**
	 * @param string $source
	 * 
	 * @return void
	 */
	public function init ($source) {
		#/Users/ut/haxe/haxe_libraries/tink_json/0.9.0/haxelib/src/tink/json/Parser.hx:98: characters 6-26
		$this->source = $source;
		#/Users/ut/haxe/haxe_libraries/tink_json/0.9.0/haxelib/src/tink/json/Parser.hx:99: characters 6-18
		$this->pos = 0;
		#/Users/ut/haxe/haxe_libraries/tink_json/0.9.0/haxelib/src/tink/json/Parser.hx:100: characters 6-30
		$this->max = mb_strlen($source);
		#/Users/ut/haxe/haxe_libraries/tink_json/0.9.0/haxelib/src/tink/json/Parser.hx:101: characters 6-19
		while (($this->pos < $this->max) && (\StringTools::fastCodeAt($this->source, $this->pos) < 33)) {
			$this->pos++;
		}
	}

	/**
	 * @param int $c
	 * 
	 * @return Value
	 */
	public function invalidChar ($c) {
		#/Users/ut/haxe/haxe_libraries/tink_json/0.9.0/haxelib/src/tink/json/Parser.hx:317: characters 5-52
		return $this->die("invalid char " . (\StringTools::hex($c, 2)??'null'), $this->pos - 1);
	}

	/**
	 * @param int $start
	 * 
	 * @return mixed
	 */
	public function invalidNumber ($start) {
		#/Users/ut/haxe/haxe_libraries/tink_json/0.9.0/haxelib/src/tink/json/Parser.hx:163: characters 5-72
		return $this->die("Invalid number " . (HxString::substring($this->source, $start, $this->pos)??'null'), $start);
	}

	/**
	 * @return int
	 */
	public function nextChar () {
		#/Users/ut/haxe/haxe_libraries/tink_json/0.9.0/haxelib/src/tink/json/Parser.hx:206: characters 5-36
		return \StringTools::fastCodeAt($this->source, $this->pos++);
	}

	/**
	 * @return bool
	 */
	public function parseBool () {
		#/Users/ut/haxe/haxe_libraries/tink_json/0.9.0/haxelib/src/tink/json/Parser.hx:382: characters 9-29
		while (($this->pos < $this->max) && (\StringTools::fastCodeAt($this->source, $this->pos) < 33)) {
			$this->pos++;
		}
		#/Users/ut/haxe/haxe_libraries/tink_json/0.9.0/haxelib/src/tink/json/Parser.hx:380: lines 380-390
		$tmp = null;
		#/Users/ut/haxe/haxe_libraries/tink_json/0.9.0/haxelib/src/tink/json/Parser.hx:383: lines 383-389
		if (($this->max > ($this->pos + 3)) && (\StringTools::fastCodeAt($this->source, $this->pos) === 116) && (\StringTools::fastCodeAt($this->source, $this->pos + 1) === 114) && (\StringTools::fastCodeAt($this->source, $this->pos + 2) === 117) && (\StringTools::fastCodeAt($this->source, $this->pos + 3) === 101)) {
			#/Users/ut/haxe/haxe_libraries/tink_json/0.9.0/haxelib/src/tink/json/Parser.hx:384: characters 9-35
			$this->pos += 4;
			#/Users/ut/haxe/haxe_libraries/tink_json/0.9.0/haxelib/src/tink/json/Parser.hx:386: characters 11-31
			while (($this->pos < $this->max) && (\StringTools::fastCodeAt($this->source, $this->pos) < 33)) {
				$this->pos++;
			}
			#/Users/ut/haxe/haxe_libraries/tink_json/0.9.0/haxelib/src/tink/json/Parser.hx:380: lines 380-390
			$tmp = true;
		} else {
			$tmp = false;
		}
		#/Users/ut/haxe/haxe_libraries/tink_json/0.9.0/haxelib/src/tink/json/Parser.hx:396: lines 396-398
		if ($tmp) {
			#/Users/ut/haxe/haxe_libraries/tink_json/0.9.0/haxelib/src/tink/json/Parser.hx:396: characters 31-35
			return true;
		} else {
			#/Users/ut/haxe/haxe_libraries/tink_json/0.9.0/haxelib/src/tink/json/Parser.hx:382: characters 9-29
			while (($this->pos < $this->max) && (\StringTools::fastCodeAt($this->source, $this->pos) < 33)) {
				$this->pos++;
			}
			#/Users/ut/haxe/haxe_libraries/tink_json/0.9.0/haxelib/src/tink/json/Parser.hx:380: lines 380-390
			$tmp1 = null;
			#/Users/ut/haxe/haxe_libraries/tink_json/0.9.0/haxelib/src/tink/json/Parser.hx:383: lines 383-389
			if (($this->max > ($this->pos + 4)) && (\StringTools::fastCodeAt($this->source, $this->pos) === 102) && (\StringTools::fastCodeAt($this->source, $this->pos + 1) === 97) && (\StringTools::fastCodeAt($this->source, $this->pos + 2) === 108) && (\StringTools::fastCodeAt($this->source, $this->pos + 3) === 115) && (\StringTools::fastCodeAt($this->source, $this->pos + 4) === 101)) {
				#/Users/ut/haxe/haxe_libraries/tink_json/0.9.0/haxelib/src/tink/json/Parser.hx:384: characters 9-35
				$this->pos += 5;
				#/Users/ut/haxe/haxe_libraries/tink_json/0.9.0/haxelib/src/tink/json/Parser.hx:386: characters 11-31
				while (($this->pos < $this->max) && (\StringTools::fastCodeAt($this->source, $this->pos) < 33)) {
					$this->pos++;
				}
				#/Users/ut/haxe/haxe_libraries/tink_json/0.9.0/haxelib/src/tink/json/Parser.hx:380: lines 380-390
				$tmp1 = true;
			} else {
				$tmp1 = false;
			}
			#/Users/ut/haxe/haxe_libraries/tink_json/0.9.0/haxelib/src/tink/json/Parser.hx:397: lines 397-398
			if ($tmp1) {
				#/Users/ut/haxe/haxe_libraries/tink_json/0.9.0/haxelib/src/tink/json/Parser.hx:397: characters 37-42
				return false;
			} else {
				#/Users/ut/haxe/haxe_libraries/tink_json/0.9.0/haxelib/src/tink/json/Parser.hx:398: characters 12-41
				return $this->die("expected boolean value");
			}
		}
	}

	/**
	 * @return mixed
	 */
	public function parseDynamic () {
		#/Users/ut/haxe/haxe_libraries/tink_json/0.9.0/haxelib/src/tink/json/Parser.hx:111: characters 5-21
		$start = $this->pos;
		#/Users/ut/haxe/haxe_libraries/tink_json/0.9.0/haxelib/src/tink/json/Parser.hx:112: characters 5-16
		$this->skipValue();
		#/Users/ut/haxe/haxe_libraries/tink_json/0.9.0/haxelib/src/tink/json/Parser.hx:113: characters 12-62
		return (new JsonParser(HxString::substring($this->source, $start, $this->pos)))->doParse();
	}

	/**
	 * @return SliceData
	 */
	public function parseNumber () {
		#/Users/ut/haxe/haxe_libraries/tink_json/0.9.0/haxelib/src/tink/json/Parser.hx:154: characters 11-47
		$char = \StringTools::fastCodeAt($this->source, $this->pos);
		#/Users/ut/haxe/haxe_libraries/tink_json/0.9.0/haxelib/src/tink/json/Parser.hx:154: lines 154-157
		if (($char === 46) || ($char === 45) || (($char < 58) && ($char > 47))) {
			#/Users/ut/haxe/haxe_libraries/tink_json/0.9.0/haxelib/src/tink/json/Parser.hx:155: characters 9-24
			return $this->doParseNumber();
		} else {
			#/Users/ut/haxe/haxe_libraries/tink_json/0.9.0/haxelib/src/tink/json/Parser.hx:157: characters 9-31
			return $this->die("number expected");
		}
	}

	/**
	 * @return SliceData
	 */
	public function parseRestOfString () {
		#/Users/ut/haxe/haxe_libraries/tink_json/0.9.0/haxelib/src/tink/json/Parser.hx:121: characters 5-40
		return $this->slice($this->skipString(), $this->pos - 1);
	}

	/**
	 * @return string
	 */
	public function parseSerialized () {
		#/Users/ut/haxe/haxe_libraries/tink_json/0.9.0/haxelib/src/tink/json/Parser.hx:209: characters 5-21
		$start = $this->pos;
		#/Users/ut/haxe/haxe_libraries/tink_json/0.9.0/haxelib/src/tink/json/Parser.hx:210: characters 5-16
		$this->skipValue();
		#/Users/ut/haxe/haxe_libraries/tink_json/0.9.0/haxelib/src/tink/json/Parser.hx:211: characters 5-45
		return HxString::substring($this->source, $start, $this->pos);
	}

	/**
	 * @return SliceData
	 */
	public function parseString () {
		#/Users/ut/haxe/haxe_libraries/tink_json/0.9.0/haxelib/src/tink/json/Parser.hx:382: characters 9-29
		while (($this->pos < $this->max) && (\StringTools::fastCodeAt($this->source, $this->pos) < 33)) {
			$this->pos++;
		}
		#/Users/ut/haxe/haxe_libraries/tink_json/0.9.0/haxelib/src/tink/json/Parser.hx:380: lines 380-390
		$e = null;
		#/Users/ut/haxe/haxe_libraries/tink_json/0.9.0/haxelib/src/tink/json/Parser.hx:383: lines 383-389
		if (($this->max > $this->pos) && (\StringTools::fastCodeAt($this->source, $this->pos) === 34)) {
			#/Users/ut/haxe/haxe_libraries/tink_json/0.9.0/haxelib/src/tink/json/Parser.hx:384: characters 9-35
			$this->pos += 1;
			#/Users/ut/haxe/haxe_libraries/tink_json/0.9.0/haxelib/src/tink/json/Parser.hx:380: lines 380-390
			$e = true;
		} else {
			$e = false;
		}
		#/Users/ut/haxe/haxe_libraries/tink_json/0.9.0/haxelib/src/tink/json/Parser.hx:367: characters 18-154
		if (!$e) {
			#/Users/ut/haxe/haxe_libraries/tink_json/0.9.0/haxelib/src/tink/json/Parser.hx:367: characters 76-108
			$this->die("Expected string");
		}
		#/Users/ut/haxe/haxe_libraries/tink_json/0.9.0/haxelib/src/tink/json/Parser.hx:118: characters 12-68
		return $this->parseRestOfString();
	}

	/**
	 * @return Value
	 */
	public function parseValue () {
		#/Users/ut/haxe/haxe_libraries/tink_json/0.9.0/haxelib/src/tink/json/Parser.hx:214: lines 214-265
		$_gthis = $this;
		#/Users/ut/haxe/haxe_libraries/tink_json/0.9.0/haxelib/src/tink/json/Parser.hx:215: characters 19-29
		$_g = \StringTools::fastCodeAt($this->source, $this->pos++);
		if ($_g === 34) {
			#/Users/ut/haxe/haxe_libraries/tink_json/0.9.0/haxelib/src/tink/json/Parser.hx:252: characters 9-48
			return Value::VString(JsonString_Impl_::toString($this->parseRestOfString()));
		} else if ($_g === 91) {
			#/Users/ut/haxe/haxe_libraries/tink_json/0.9.0/haxelib/src/tink/json/Parser.hx:240: characters 9-38
			$ret = new \Array_hx();
			#/Users/ut/haxe/haxe_libraries/tink_json/0.9.0/haxelib/src/tink/json/Parser.hx:382: characters 9-29
			while (($this->pos < $this->max) && (\StringTools::fastCodeAt($this->source, $this->pos) < 33)) {
				$this->pos++;
			}
			#/Users/ut/haxe/haxe_libraries/tink_json/0.9.0/haxelib/src/tink/json/Parser.hx:380: lines 380-390
			$tmp = null;
			#/Users/ut/haxe/haxe_libraries/tink_json/0.9.0/haxelib/src/tink/json/Parser.hx:383: lines 383-389
			if (($this->max > $this->pos) && (\StringTools::fastCodeAt($this->source, $this->pos) === 93)) {
				#/Users/ut/haxe/haxe_libraries/tink_json/0.9.0/haxelib/src/tink/json/Parser.hx:384: characters 9-35
				$this->pos += 1;
				#/Users/ut/haxe/haxe_libraries/tink_json/0.9.0/haxelib/src/tink/json/Parser.hx:386: characters 11-31
				while (($this->pos < $this->max) && (\StringTools::fastCodeAt($this->source, $this->pos) < 33)) {
					$this->pos++;
				}
				#/Users/ut/haxe/haxe_libraries/tink_json/0.9.0/haxelib/src/tink/json/Parser.hx:380: lines 380-390
				$tmp = true;
			} else {
				$tmp = false;
			}
			#/Users/ut/haxe/haxe_libraries/tink_json/0.9.0/haxelib/src/tink/json/Parser.hx:242: lines 242-247
			if (!$tmp) {
				#/Users/ut/haxe/haxe_libraries/tink_json/0.9.0/haxelib/src/tink/json/Parser.hx:243: lines 243-245
				while (true) {
					#/Users/ut/haxe/haxe_libraries/tink_json/0.9.0/haxelib/src/tink/json/Parser.hx:244: characters 13-35
					$x = $this->parseValue();
					$ret->arr[$ret->length] = $x;
					++$ret->length;
					#/Users/ut/haxe/haxe_libraries/tink_json/0.9.0/haxelib/src/tink/json/Parser.hx:382: characters 9-29
					while (($this->pos < $this->max) && (\StringTools::fastCodeAt($this->source, $this->pos) < 33)) {
						$this->pos++;
					}
					#/Users/ut/haxe/haxe_libraries/tink_json/0.9.0/haxelib/src/tink/json/Parser.hx:380: lines 380-390
					$tmp1 = null;
					#/Users/ut/haxe/haxe_libraries/tink_json/0.9.0/haxelib/src/tink/json/Parser.hx:383: lines 383-389
					if (($this->max > $this->pos) && (\StringTools::fastCodeAt($this->source, $this->pos) === 44)) {
						#/Users/ut/haxe/haxe_libraries/tink_json/0.9.0/haxelib/src/tink/json/Parser.hx:384: characters 9-35
						$this->pos += 1;
						#/Users/ut/haxe/haxe_libraries/tink_json/0.9.0/haxelib/src/tink/json/Parser.hx:386: characters 11-31
						while (($this->pos < $this->max) && (\StringTools::fastCodeAt($this->source, $this->pos) < 33)) {
							$this->pos++;
						}
						#/Users/ut/haxe/haxe_libraries/tink_json/0.9.0/haxelib/src/tink/json/Parser.hx:380: lines 380-390
						$tmp1 = true;
					} else {
						$tmp1 = false;
					}
					#/Users/ut/haxe/haxe_libraries/tink_json/0.9.0/haxelib/src/tink/json/Parser.hx:243: lines 243-245
					if (!$tmp1) {
						break;
					}
				}
				#/Users/ut/haxe/haxe_libraries/tink_json/0.9.0/haxelib/src/tink/json/Parser.hx:382: characters 9-29
				while (($this->pos < $this->max) && (\StringTools::fastCodeAt($this->source, $this->pos) < 33)) {
					$this->pos++;
				}
				#/Users/ut/haxe/haxe_libraries/tink_json/0.9.0/haxelib/src/tink/json/Parser.hx:380: lines 380-390
				$tmp2 = null;
				#/Users/ut/haxe/haxe_libraries/tink_json/0.9.0/haxelib/src/tink/json/Parser.hx:383: lines 383-389
				if (($this->max > $this->pos) && (\StringTools::fastCodeAt($this->source, $this->pos) === 93)) {
					#/Users/ut/haxe/haxe_libraries/tink_json/0.9.0/haxelib/src/tink/json/Parser.hx:384: characters 9-35
					$this->pos += 1;
					#/Users/ut/haxe/haxe_libraries/tink_json/0.9.0/haxelib/src/tink/json/Parser.hx:380: lines 380-390
					$tmp2 = true;
				} else {
					$tmp2 = false;
				}
				#/Users/ut/haxe/haxe_libraries/tink_json/0.9.0/haxelib/src/tink/json/Parser.hx:367: characters 18-154
				if (!$tmp2) {
					#/Users/ut/haxe/haxe_libraries/tink_json/0.9.0/haxelib/src/tink/json/Parser.hx:367: characters 76-108
					$this->die("Expected ]");
				}
			}
			#/Users/ut/haxe/haxe_libraries/tink_json/0.9.0/haxelib/src/tink/json/Parser.hx:249: characters 9-20
			return Value::VArray($ret);
		} else if ($_g === 102) {
			#/Users/ut/haxe/haxe_libraries/tink_json/0.9.0/haxelib/src/tink/json/Parser.hx:383: lines 383-389
			$e = null;
			if (($this->max > ($this->pos + 3)) && (\StringTools::fastCodeAt($this->source, $this->pos) === 97) && (\StringTools::fastCodeAt($this->source, $this->pos + 1) === 108) && (\StringTools::fastCodeAt($this->source, $this->pos + 2) === 115) && (\StringTools::fastCodeAt($this->source, $this->pos + 3) === 101)) {
				#/Users/ut/haxe/haxe_libraries/tink_json/0.9.0/haxelib/src/tink/json/Parser.hx:384: characters 9-35
				$this->pos += 4;
				#/Users/ut/haxe/haxe_libraries/tink_json/0.9.0/haxelib/src/tink/json/Parser.hx:383: lines 383-389
				$e = true;
			} else {
				$e = false;
			}
			#/Users/ut/haxe/haxe_libraries/tink_json/0.9.0/haxelib/src/tink/json/Parser.hx:367: characters 18-154
			if (!$e) {
				#/Users/ut/haxe/haxe_libraries/tink_json/0.9.0/haxelib/src/tink/json/Parser.hx:367: characters 76-108
				$this->die("Expected alse");
			}
			#/Users/ut/haxe/haxe_libraries/tink_json/0.9.0/haxelib/src/tink/json/Parser.hx:256: characters 9-52
			return Value::VBool(false);
		} else if ($_g === 110) {
			#/Users/ut/haxe/haxe_libraries/tink_json/0.9.0/haxelib/src/tink/json/Parser.hx:383: lines 383-389
			$e1 = null;
			if (($this->max > ($this->pos + 2)) && (\StringTools::fastCodeAt($this->source, $this->pos) === 117) && (\StringTools::fastCodeAt($this->source, $this->pos + 1) === 108) && (\StringTools::fastCodeAt($this->source, $this->pos + 2) === 108)) {
				#/Users/ut/haxe/haxe_libraries/tink_json/0.9.0/haxelib/src/tink/json/Parser.hx:384: characters 9-35
				$this->pos += 3;
				#/Users/ut/haxe/haxe_libraries/tink_json/0.9.0/haxelib/src/tink/json/Parser.hx:383: lines 383-389
				$e1 = true;
			} else {
				$e1 = false;
			}
			#/Users/ut/haxe/haxe_libraries/tink_json/0.9.0/haxelib/src/tink/json/Parser.hx:367: characters 18-154
			if (!$e1) {
				#/Users/ut/haxe/haxe_libraries/tink_json/0.9.0/haxelib/src/tink/json/Parser.hx:367: characters 76-108
				$this->die("Expected ull");
			}
			#/Users/ut/haxe/haxe_libraries/tink_json/0.9.0/haxelib/src/tink/json/Parser.hx:258: characters 39-44
			return Value::VNull();
		} else if ($_g === 116) {
			#/Users/ut/haxe/haxe_libraries/tink_json/0.9.0/haxelib/src/tink/json/Parser.hx:383: lines 383-389
			$e2 = null;
			if (($this->max > ($this->pos + 2)) && (\StringTools::fastCodeAt($this->source, $this->pos) === 114) && (\StringTools::fastCodeAt($this->source, $this->pos + 1) === 117) && (\StringTools::fastCodeAt($this->source, $this->pos + 2) === 101)) {
				#/Users/ut/haxe/haxe_libraries/tink_json/0.9.0/haxelib/src/tink/json/Parser.hx:384: characters 9-35
				$this->pos += 3;
				#/Users/ut/haxe/haxe_libraries/tink_json/0.9.0/haxelib/src/tink/json/Parser.hx:383: lines 383-389
				$e2 = true;
			} else {
				$e2 = false;
			}
			#/Users/ut/haxe/haxe_libraries/tink_json/0.9.0/haxelib/src/tink/json/Parser.hx:367: characters 18-154
			if (!$e2) {
				#/Users/ut/haxe/haxe_libraries/tink_json/0.9.0/haxelib/src/tink/json/Parser.hx:367: characters 76-108
				$this->die("Expected rue");
			}
			#/Users/ut/haxe/haxe_libraries/tink_json/0.9.0/haxelib/src/tink/json/Parser.hx:254: characters 9-50
			return Value::VBool(true);
		} else if ($_g === 123) {
			#/Users/ut/haxe/haxe_libraries/tink_json/0.9.0/haxelib/src/tink/json/Parser.hx:217: characters 9-48
			$fields = new \Array_hx();
			#/Users/ut/haxe/haxe_libraries/tink_json/0.9.0/haxelib/src/tink/json/Parser.hx:382: characters 9-29
			while (($this->pos < $this->max) && (\StringTools::fastCodeAt($this->source, $this->pos) < 33)) {
				$this->pos++;
			}
			#/Users/ut/haxe/haxe_libraries/tink_json/0.9.0/haxelib/src/tink/json/Parser.hx:380: lines 380-390
			$tmp3 = null;
			#/Users/ut/haxe/haxe_libraries/tink_json/0.9.0/haxelib/src/tink/json/Parser.hx:383: lines 383-389
			if (($this->max > $this->pos) && (\StringTools::fastCodeAt($this->source, $this->pos) === 125)) {
				#/Users/ut/haxe/haxe_libraries/tink_json/0.9.0/haxelib/src/tink/json/Parser.hx:384: characters 9-35
				$this->pos += 1;
				#/Users/ut/haxe/haxe_libraries/tink_json/0.9.0/haxelib/src/tink/json/Parser.hx:386: characters 11-31
				while (($this->pos < $this->max) && (\StringTools::fastCodeAt($this->source, $this->pos) < 33)) {
					$this->pos++;
				}
				#/Users/ut/haxe/haxe_libraries/tink_json/0.9.0/haxelib/src/tink/json/Parser.hx:380: lines 380-390
				$tmp3 = true;
			} else {
				$tmp3 = false;
			}
			#/Users/ut/haxe/haxe_libraries/tink_json/0.9.0/haxelib/src/tink/json/Parser.hx:218: lines 218-234
			if (!$tmp3) {
				#/Users/ut/haxe/haxe_libraries/tink_json/0.9.0/haxelib/src/tink/json/Parser.hx:229: lines 229-231
				while (true) {
					#/Users/ut/haxe/haxe_libraries/tink_json/0.9.0/haxelib/src/tink/json/Parser.hx:230: characters 13-19
					if (\StringTools::fastCodeAt($_gthis->source, $_gthis->pos++) !== 34) {
						$_gthis->die("expected string", $_gthis->pos - 1);
					}
					$x1 = JsonString_Impl_::toString($_gthis->parseRestOfString());
					while (($_gthis->pos < $_gthis->max) && (\StringTools::fastCodeAt($_gthis->source, $_gthis->pos) < 33)) {
						$_gthis->pos++;
					}
					$e3 = null;
					if (($_gthis->max > $_gthis->pos) && (\StringTools::fastCodeAt($_gthis->source, $_gthis->pos) === 58)) {
						$_gthis->pos += 1;
						while (($_gthis->pos < $_gthis->max) && (\StringTools::fastCodeAt($_gthis->source, $_gthis->pos) < 33)) {
							$_gthis->pos++;
						}
						$e3 = true;
					} else {
						$e3 = false;
					}
					if (!$e3) {
						$_gthis->die("Expected :");
					}
					$x2 = new NamedWith($x1, $_gthis->parseValue());
					$fields->arr[$fields->length] = $x2;
					++$fields->length;

					#/Users/ut/haxe/haxe_libraries/tink_json/0.9.0/haxelib/src/tink/json/Parser.hx:382: characters 9-29
					while (($this->pos < $this->max) && (\StringTools::fastCodeAt($this->source, $this->pos) < 33)) {
						$this->pos++;
					}
					#/Users/ut/haxe/haxe_libraries/tink_json/0.9.0/haxelib/src/tink/json/Parser.hx:380: lines 380-390
					$tmp4 = null;
					#/Users/ut/haxe/haxe_libraries/tink_json/0.9.0/haxelib/src/tink/json/Parser.hx:383: lines 383-389
					if (($this->max > $this->pos) && (\StringTools::fastCodeAt($this->source, $this->pos) === 44)) {
						#/Users/ut/haxe/haxe_libraries/tink_json/0.9.0/haxelib/src/tink/json/Parser.hx:384: characters 9-35
						$this->pos += 1;
						#/Users/ut/haxe/haxe_libraries/tink_json/0.9.0/haxelib/src/tink/json/Parser.hx:386: characters 11-31
						while (($this->pos < $this->max) && (\StringTools::fastCodeAt($this->source, $this->pos) < 33)) {
							$this->pos++;
						}
						#/Users/ut/haxe/haxe_libraries/tink_json/0.9.0/haxelib/src/tink/json/Parser.hx:380: lines 380-390
						$tmp4 = true;
					} else {
						$tmp4 = false;
					}
					#/Users/ut/haxe/haxe_libraries/tink_json/0.9.0/haxelib/src/tink/json/Parser.hx:229: lines 229-231
					if (!$tmp4) {
						break;
					}
				}
				#/Users/ut/haxe/haxe_libraries/tink_json/0.9.0/haxelib/src/tink/json/Parser.hx:382: characters 9-29
				while (($this->pos < $this->max) && (\StringTools::fastCodeAt($this->source, $this->pos) < 33)) {
					$this->pos++;
				}
				#/Users/ut/haxe/haxe_libraries/tink_json/0.9.0/haxelib/src/tink/json/Parser.hx:380: lines 380-390
				$tmp5 = null;
				#/Users/ut/haxe/haxe_libraries/tink_json/0.9.0/haxelib/src/tink/json/Parser.hx:383: lines 383-389
				if (($this->max > $this->pos) && (\StringTools::fastCodeAt($this->source, $this->pos) === 125)) {
					#/Users/ut/haxe/haxe_libraries/tink_json/0.9.0/haxelib/src/tink/json/Parser.hx:384: characters 9-35
					$this->pos += 1;
					#/Users/ut/haxe/haxe_libraries/tink_json/0.9.0/haxelib/src/tink/json/Parser.hx:380: lines 380-390
					$tmp5 = true;
				} else {
					$tmp5 = false;
				}
				#/Users/ut/haxe/haxe_libraries/tink_json/0.9.0/haxelib/src/tink/json/Parser.hx:367: characters 18-154
				if (!$tmp5) {
					#/Users/ut/haxe/haxe_libraries/tink_json/0.9.0/haxelib/src/tink/json/Parser.hx:367: characters 76-108
					$this->die("Expected }");
				}
			}
			#/Users/ut/haxe/haxe_libraries/tink_json/0.9.0/haxelib/src/tink/json/Parser.hx:236: characters 9-24
			return Value::VObject($fields);
		} else {
			#/Users/ut/haxe/haxe_libraries/tink_json/0.9.0/haxelib/src/tink/json/Parser.hx:260: lines 260-264
			if (($_g === 46) || ($_g === 45) || (($_g < 58) && ($_g > 47))) {
				#/Users/ut/haxe/haxe_libraries/tink_json/0.9.0/haxelib/src/tink/json/Parser.hx:261: characters 11-16
				$this->pos--;
				#/Users/ut/haxe/haxe_libraries/tink_json/0.9.0/haxelib/src/tink/json/Parser.hx:262: characters 19-44
				$this1 = $this->doParseNumber();
				#/Users/ut/haxe/haxe_libraries/tink_json/0.9.0/haxelib/src/tink/json/Parser.hx:262: characters 11-45
				return Value::VNumber(\Std::parseFloat(HxString::substring($this1->source, $this1->min, $this1->max)));
			} else {
				#/Users/ut/haxe/haxe_libraries/tink_json/0.9.0/haxelib/src/tink/json/Parser.hx:264: characters 14-31
				return $this->invalidChar($_g);
			}
		}
	}

	/**
	 * @return void
	 */
	public function skipArray () {
		#/Users/ut/haxe/haxe_libraries/tink_json/0.9.0/haxelib/src/tink/json/Parser.hx:382: characters 9-29
		while (($this->pos < $this->max) && (\StringTools::fastCodeAt($this->source, $this->pos) < 33)) {
			$this->pos++;
		}
		#/Users/ut/haxe/haxe_libraries/tink_json/0.9.0/haxelib/src/tink/json/Parser.hx:380: lines 380-390
		$tmp = null;
		#/Users/ut/haxe/haxe_libraries/tink_json/0.9.0/haxelib/src/tink/json/Parser.hx:383: lines 383-389
		if (($this->max > $this->pos) && (\StringTools::fastCodeAt($this->source, $this->pos) === 93)) {
			#/Users/ut/haxe/haxe_libraries/tink_json/0.9.0/haxelib/src/tink/json/Parser.hx:384: characters 9-35
			$this->pos += 1;
			#/Users/ut/haxe/haxe_libraries/tink_json/0.9.0/haxelib/src/tink/json/Parser.hx:386: characters 11-31
			while (($this->pos < $this->max) && (\StringTools::fastCodeAt($this->source, $this->pos) < 33)) {
				$this->pos++;
			}
			#/Users/ut/haxe/haxe_libraries/tink_json/0.9.0/haxelib/src/tink/json/Parser.hx:380: lines 380-390
			$tmp = true;
		} else {
			$tmp = false;
		}
		#/Users/ut/haxe/haxe_libraries/tink_json/0.9.0/haxelib/src/tink/json/Parser.hx:268: lines 268-269
		if ($tmp) {
			#/Users/ut/haxe/haxe_libraries/tink_json/0.9.0/haxelib/src/tink/json/Parser.hx:269: characters 7-13
			return;
		}
		#/Users/ut/haxe/haxe_libraries/tink_json/0.9.0/haxelib/src/tink/json/Parser.hx:271: lines 271-273
		while (true) {
			#/Users/ut/haxe/haxe_libraries/tink_json/0.9.0/haxelib/src/tink/json/Parser.hx:272: characters 7-18
			$this->skipValue();
			#/Users/ut/haxe/haxe_libraries/tink_json/0.9.0/haxelib/src/tink/json/Parser.hx:382: characters 9-29
			while (($this->pos < $this->max) && (\StringTools::fastCodeAt($this->source, $this->pos) < 33)) {
				$this->pos++;
			}
			#/Users/ut/haxe/haxe_libraries/tink_json/0.9.0/haxelib/src/tink/json/Parser.hx:380: lines 380-390
			$tmp1 = null;
			#/Users/ut/haxe/haxe_libraries/tink_json/0.9.0/haxelib/src/tink/json/Parser.hx:383: lines 383-389
			if (($this->max > $this->pos) && (\StringTools::fastCodeAt($this->source, $this->pos) === 44)) {
				#/Users/ut/haxe/haxe_libraries/tink_json/0.9.0/haxelib/src/tink/json/Parser.hx:384: characters 9-35
				$this->pos += 1;
				#/Users/ut/haxe/haxe_libraries/tink_json/0.9.0/haxelib/src/tink/json/Parser.hx:386: characters 11-31
				while (($this->pos < $this->max) && (\StringTools::fastCodeAt($this->source, $this->pos) < 33)) {
					$this->pos++;
				}
				#/Users/ut/haxe/haxe_libraries/tink_json/0.9.0/haxelib/src/tink/json/Parser.hx:380: lines 380-390
				$tmp1 = true;
			} else {
				$tmp1 = false;
			}
			#/Users/ut/haxe/haxe_libraries/tink_json/0.9.0/haxelib/src/tink/json/Parser.hx:271: lines 271-273
			if (!$tmp1) {
				break;
			}
		}
		#/Users/ut/haxe/haxe_libraries/tink_json/0.9.0/haxelib/src/tink/json/Parser.hx:382: characters 9-29
		while (($this->pos < $this->max) && (\StringTools::fastCodeAt($this->source, $this->pos) < 33)) {
			$this->pos++;
		}
		#/Users/ut/haxe/haxe_libraries/tink_json/0.9.0/haxelib/src/tink/json/Parser.hx:380: lines 380-390
		$tmp2 = null;
		#/Users/ut/haxe/haxe_libraries/tink_json/0.9.0/haxelib/src/tink/json/Parser.hx:383: lines 383-389
		if (($this->max > $this->pos) && (\StringTools::fastCodeAt($this->source, $this->pos) === 93)) {
			#/Users/ut/haxe/haxe_libraries/tink_json/0.9.0/haxelib/src/tink/json/Parser.hx:384: characters 9-35
			$this->pos += 1;
			#/Users/ut/haxe/haxe_libraries/tink_json/0.9.0/haxelib/src/tink/json/Parser.hx:380: lines 380-390
			$tmp2 = true;
		} else {
			$tmp2 = false;
		}
		#/Users/ut/haxe/haxe_libraries/tink_json/0.9.0/haxelib/src/tink/json/Parser.hx:367: characters 18-154
		if (!$tmp2) {
			#/Users/ut/haxe/haxe_libraries/tink_json/0.9.0/haxelib/src/tink/json/Parser.hx:367: characters 76-108
			$this->die("Expected ]");
		}
	}

	/**
	 * @return void
	 */
	public function skipIgnored () {
		#/Users/ut/haxe/haxe_libraries/tink_json/0.9.0/haxelib/src/tink/json/Parser.hx:107: characters 5-59
		while (($this->pos < $this->max) && (\StringTools::fastCodeAt($this->source, $this->pos) < 33)) {
			#/Users/ut/haxe/haxe_libraries/tink_json/0.9.0/haxelib/src/tink/json/Parser.hx:107: characters 54-59
			$this->pos++;
		}
	}

	/**
	 * @param int $c
	 * 
	 * @return int
	 */
	public function skipNumber ($c) {
		#/Users/ut/haxe/haxe_libraries/tink_json/0.9.0/haxelib/src/tink/json/Parser.hx:167: characters 5-25
		$start = $this->pos - 1;
		#/Users/ut/haxe/haxe_libraries/tink_json/0.9.0/haxelib/src/tink/json/Parser.hx:168: characters 5-69
		$minus = $c === 45;
		$digit = !$minus;
		$zero = $c === 48;
		#/Users/ut/haxe/haxe_libraries/tink_json/0.9.0/haxelib/src/tink/json/Parser.hx:169: characters 5-59
		$point = false;
		$e = false;
		$pm = false;
		$end = false;
		#/Users/ut/haxe/haxe_libraries/tink_json/0.9.0/haxelib/src/tink/json/Parser.hx:170: lines 170-198
		while (true) {
			#/Users/ut/haxe/haxe_libraries/tink_json/0.9.0/haxelib/src/tink/json/Parser.hx:171: characters 7-21
			$c = \StringTools::fastCodeAt($this->source, $this->pos++);
			#/Users/ut/haxe/haxe_libraries/tink_json/0.9.0/haxelib/src/tink/json/Parser.hx:172: lines 172-196
			if ($c === 43 || $c === 45) {
				#/Users/ut/haxe/haxe_libraries/tink_json/0.9.0/haxelib/src/tink/json/Parser.hx:190: characters 11-45
				if (!$e || $pm) {
					#/Users/ut/haxe/haxe_libraries/tink_json/0.9.0/haxelib/src/tink/json/Parser.hx:190: characters 25-45
					$this->invalidNumber($start);
				}
				#/Users/ut/haxe/haxe_libraries/tink_json/0.9.0/haxelib/src/tink/json/Parser.hx:191: characters 11-24
				$digit = false;
				#/Users/ut/haxe/haxe_libraries/tink_json/0.9.0/haxelib/src/tink/json/Parser.hx:191: characters 26-35
				$pm = true;
			} else if ($c === 46) {
				#/Users/ut/haxe/haxe_libraries/tink_json/0.9.0/haxelib/src/tink/json/Parser.hx:184: characters 11-51
				if ($minus || $point) {
					#/Users/ut/haxe/haxe_libraries/tink_json/0.9.0/haxelib/src/tink/json/Parser.hx:184: characters 31-51
					$this->invalidNumber($start);
				}
				#/Users/ut/haxe/haxe_libraries/tink_json/0.9.0/haxelib/src/tink/json/Parser.hx:185: characters 11-24
				$digit = false;
				#/Users/ut/haxe/haxe_libraries/tink_json/0.9.0/haxelib/src/tink/json/Parser.hx:185: characters 26-38
				$point = true;
			} else if ($c === 48) {
				#/Users/ut/haxe/haxe_libraries/tink_json/0.9.0/haxelib/src/tink/json/Parser.hx:174: characters 11-51
				if ($zero && !$point) {
					#/Users/ut/haxe/haxe_libraries/tink_json/0.9.0/haxelib/src/tink/json/Parser.hx:174: characters 31-51
					$this->invalidNumber($start);
				}
				#/Users/ut/haxe/haxe_libraries/tink_json/0.9.0/haxelib/src/tink/json/Parser.hx:175: lines 175-177
				if ($minus) {
					#/Users/ut/haxe/haxe_libraries/tink_json/0.9.0/haxelib/src/tink/json/Parser.hx:176: characters 13-26
					$minus = false;
					#/Users/ut/haxe/haxe_libraries/tink_json/0.9.0/haxelib/src/tink/json/Parser.hx:176: characters 28-39
					$zero = true;
				}
				#/Users/ut/haxe/haxe_libraries/tink_json/0.9.0/haxelib/src/tink/json/Parser.hx:178: characters 11-23
				$digit = true;
			} else if ($c === 49 || $c === 50 || $c === 51 || $c === 52 || $c === 53 || $c === 54 || $c === 55 || $c === 56 || $c === 57) {
				#/Users/ut/haxe/haxe_libraries/tink_json/0.9.0/haxelib/src/tink/json/Parser.hx:180: characters 11-51
				if ($zero && !$point) {
					#/Users/ut/haxe/haxe_libraries/tink_json/0.9.0/haxelib/src/tink/json/Parser.hx:180: characters 31-51
					$this->invalidNumber($start);
				}
				#/Users/ut/haxe/haxe_libraries/tink_json/0.9.0/haxelib/src/tink/json/Parser.hx:181: characters 11-35
				if ($minus) {
					#/Users/ut/haxe/haxe_libraries/tink_json/0.9.0/haxelib/src/tink/json/Parser.hx:181: characters 22-35
					$minus = false;
				}
				#/Users/ut/haxe/haxe_libraries/tink_json/0.9.0/haxelib/src/tink/json/Parser.hx:182: characters 11-23
				$digit = true;
				#/Users/ut/haxe/haxe_libraries/tink_json/0.9.0/haxelib/src/tink/json/Parser.hx:182: characters 25-37
				$zero = false;
			} else if ($c === 69 || $c === 101) {
				#/Users/ut/haxe/haxe_libraries/tink_json/0.9.0/haxelib/src/tink/json/Parser.hx:187: characters 11-55
				if ($minus || $zero || $e) {
					#/Users/ut/haxe/haxe_libraries/tink_json/0.9.0/haxelib/src/tink/json/Parser.hx:187: characters 35-55
					$this->invalidNumber($start);
				}
				#/Users/ut/haxe/haxe_libraries/tink_json/0.9.0/haxelib/src/tink/json/Parser.hx:188: characters 11-24
				$digit = false;
				#/Users/ut/haxe/haxe_libraries/tink_json/0.9.0/haxelib/src/tink/json/Parser.hx:188: characters 26-34
				$e = true;
			} else {
				#/Users/ut/haxe/haxe_libraries/tink_json/0.9.0/haxelib/src/tink/json/Parser.hx:193: characters 11-43
				if (!$digit) {
					#/Users/ut/haxe/haxe_libraries/tink_json/0.9.0/haxelib/src/tink/json/Parser.hx:193: characters 23-43
					$this->invalidNumber($start);
				}
				#/Users/ut/haxe/haxe_libraries/tink_json/0.9.0/haxelib/src/tink/json/Parser.hx:194: characters 11-16
				$this->pos--;
				#/Users/ut/haxe/haxe_libraries/tink_json/0.9.0/haxelib/src/tink/json/Parser.hx:195: characters 11-21
				$end = true;
			}
			#/Users/ut/haxe/haxe_libraries/tink_json/0.9.0/haxelib/src/tink/json/Parser.hx:197: characters 7-21
			if ($end) {
				#/Users/ut/haxe/haxe_libraries/tink_json/0.9.0/haxelib/src/tink/json/Parser.hx:197: characters 16-21
				break;
			}
		}
		#/Users/ut/haxe/haxe_libraries/tink_json/0.9.0/haxelib/src/tink/json/Parser.hx:199: characters 5-17
		return $start;
	}

	/**
	 * @return int
	 */
	public function skipString () {
		#/Users/ut/haxe/haxe_libraries/tink_json/0.9.0/haxelib/src/tink/json/Parser.hx:124: characters 5-21
		$start = $this->pos;
		#/Users/ut/haxe/haxe_libraries/tink_json/0.9.0/haxelib/src/tink/json/Parser.hx:126: lines 126-141
		while (true) {
			#/Users/ut/haxe/haxe_libraries/tink_json/0.9.0/haxelib/src/tink/json/Parser.hx:127: characters 14-38
			$_g = HxString::indexOf($this->source, "\"", $this->pos);
			if ($_g === -1) {
				#/Users/ut/haxe/haxe_libraries/tink_json/0.9.0/haxelib/src/tink/json/Parser.hx:130: characters 11-44
				$this->die("unterminated string", $start);
			} else {
				#/Users/ut/haxe/haxe_libraries/tink_json/0.9.0/haxelib/src/tink/json/Parser.hx:134: characters 11-22
				$this->pos = $_g + 1;
				#/Users/ut/haxe/haxe_libraries/tink_json/0.9.0/haxelib/src/tink/json/Parser.hx:136: characters 11-27
				$p = $this->pos - 2;
				#/Users/ut/haxe/haxe_libraries/tink_json/0.9.0/haxelib/src/tink/json/Parser.hx:138: characters 11-56
				while (\StringTools::fastCodeAt($this->source, $p) === 92) {
					#/Users/ut/haxe/haxe_libraries/tink_json/0.9.0/haxelib/src/tink/json/Parser.hx:138: characters 53-56
					--$p;
				}
				#/Users/ut/haxe/haxe_libraries/tink_json/0.9.0/haxelib/src/tink/json/Parser.hx:139: lines 139-140
				if ((($p - $this->pos) & 1) === 0) {
					#/Users/ut/haxe/haxe_libraries/tink_json/0.9.0/haxelib/src/tink/json/Parser.hx:140: characters 13-18
					break;
				}
			}
		}
		#/Users/ut/haxe/haxe_libraries/tink_json/0.9.0/haxelib/src/tink/json/Parser.hx:143: characters 5-17
		return $start;
	}

	/**
	 * @return void
	 */
	public function skipValue () {
		#/Users/ut/haxe/haxe_libraries/tink_json/0.9.0/haxelib/src/tink/json/Parser.hx:278: lines 278-314
		$_gthis = $this;
		#/Users/ut/haxe/haxe_libraries/tink_json/0.9.0/haxelib/src/tink/json/Parser.hx:279: characters 12-22
		$_g = \StringTools::fastCodeAt($this->source, $this->pos++);
		if ($_g === 34) {
			#/Users/ut/haxe/haxe_libraries/tink_json/0.9.0/haxelib/src/tink/json/Parser.hx:302: characters 9-21
			$this->skipString();
		} else if ($_g === 91) {
			#/Users/ut/haxe/haxe_libraries/tink_json/0.9.0/haxelib/src/tink/json/Parser.hx:300: characters 9-20
			$this->skipArray();
		} else if ($_g === 102) {
			#/Users/ut/haxe/haxe_libraries/tink_json/0.9.0/haxelib/src/tink/json/Parser.hx:383: lines 383-389
			$tmp = null;
			if (($this->max > ($this->pos + 3)) && (\StringTools::fastCodeAt($this->source, $this->pos) === 97) && (\StringTools::fastCodeAt($this->source, $this->pos + 1) === 108) && (\StringTools::fastCodeAt($this->source, $this->pos + 2) === 115) && (\StringTools::fastCodeAt($this->source, $this->pos + 3) === 101)) {
				#/Users/ut/haxe/haxe_libraries/tink_json/0.9.0/haxelib/src/tink/json/Parser.hx:384: characters 9-35
				$this->pos += 4;
				#/Users/ut/haxe/haxe_libraries/tink_json/0.9.0/haxelib/src/tink/json/Parser.hx:383: lines 383-389
				$tmp = true;
			} else {
				$tmp = false;
			}
			#/Users/ut/haxe/haxe_libraries/tink_json/0.9.0/haxelib/src/tink/json/Parser.hx:367: characters 18-154
			if (!$tmp) {
				#/Users/ut/haxe/haxe_libraries/tink_json/0.9.0/haxelib/src/tink/json/Parser.hx:367: characters 76-108
				$this->die("Expected alse");
			}
		} else if ($_g === 110) {
			#/Users/ut/haxe/haxe_libraries/tink_json/0.9.0/haxelib/src/tink/json/Parser.hx:383: lines 383-389
			$tmp1 = null;
			if (($this->max > ($this->pos + 2)) && (\StringTools::fastCodeAt($this->source, $this->pos) === 117) && (\StringTools::fastCodeAt($this->source, $this->pos + 1) === 108) && (\StringTools::fastCodeAt($this->source, $this->pos + 2) === 108)) {
				#/Users/ut/haxe/haxe_libraries/tink_json/0.9.0/haxelib/src/tink/json/Parser.hx:384: characters 9-35
				$this->pos += 3;
				#/Users/ut/haxe/haxe_libraries/tink_json/0.9.0/haxelib/src/tink/json/Parser.hx:383: lines 383-389
				$tmp1 = true;
			} else {
				$tmp1 = false;
			}
			#/Users/ut/haxe/haxe_libraries/tink_json/0.9.0/haxelib/src/tink/json/Parser.hx:367: characters 18-154
			if (!$tmp1) {
				#/Users/ut/haxe/haxe_libraries/tink_json/0.9.0/haxelib/src/tink/json/Parser.hx:367: characters 76-108
				$this->die("Expected ull");
			}
		} else if ($_g === 116) {
			#/Users/ut/haxe/haxe_libraries/tink_json/0.9.0/haxelib/src/tink/json/Parser.hx:383: lines 383-389
			$tmp2 = null;
			if (($this->max > ($this->pos + 2)) && (\StringTools::fastCodeAt($this->source, $this->pos) === 114) && (\StringTools::fastCodeAt($this->source, $this->pos + 1) === 117) && (\StringTools::fastCodeAt($this->source, $this->pos + 2) === 101)) {
				#/Users/ut/haxe/haxe_libraries/tink_json/0.9.0/haxelib/src/tink/json/Parser.hx:384: characters 9-35
				$this->pos += 3;
				#/Users/ut/haxe/haxe_libraries/tink_json/0.9.0/haxelib/src/tink/json/Parser.hx:383: lines 383-389
				$tmp2 = true;
			} else {
				$tmp2 = false;
			}
			#/Users/ut/haxe/haxe_libraries/tink_json/0.9.0/haxelib/src/tink/json/Parser.hx:367: characters 18-154
			if (!$tmp2) {
				#/Users/ut/haxe/haxe_libraries/tink_json/0.9.0/haxelib/src/tink/json/Parser.hx:367: characters 76-108
				$this->die("Expected rue");
			}
		} else if ($_g === 123) {
			#/Users/ut/haxe/haxe_libraries/tink_json/0.9.0/haxelib/src/tink/json/Parser.hx:382: characters 9-29
			while (($this->pos < $this->max) && (\StringTools::fastCodeAt($this->source, $this->pos) < 33)) {
				$this->pos++;
			}
			#/Users/ut/haxe/haxe_libraries/tink_json/0.9.0/haxelib/src/tink/json/Parser.hx:380: lines 380-390
			$tmp3 = null;
			#/Users/ut/haxe/haxe_libraries/tink_json/0.9.0/haxelib/src/tink/json/Parser.hx:383: lines 383-389
			if (($this->max > $this->pos) && (\StringTools::fastCodeAt($this->source, $this->pos) === 125)) {
				#/Users/ut/haxe/haxe_libraries/tink_json/0.9.0/haxelib/src/tink/json/Parser.hx:384: characters 9-35
				$this->pos += 1;
				#/Users/ut/haxe/haxe_libraries/tink_json/0.9.0/haxelib/src/tink/json/Parser.hx:386: characters 11-31
				while (($this->pos < $this->max) && (\StringTools::fastCodeAt($this->source, $this->pos) < 33)) {
					$this->pos++;
				}
				#/Users/ut/haxe/haxe_libraries/tink_json/0.9.0/haxelib/src/tink/json/Parser.hx:380: lines 380-390
				$tmp3 = true;
			} else {
				$tmp3 = false;
			}
			#/Users/ut/haxe/haxe_libraries/tink_json/0.9.0/haxelib/src/tink/json/Parser.hx:281: lines 281-282
			if ($tmp3) {
				#/Users/ut/haxe/haxe_libraries/tink_json/0.9.0/haxelib/src/tink/json/Parser.hx:282: characters 11-17
				return;
			}
			#/Users/ut/haxe/haxe_libraries/tink_json/0.9.0/haxelib/src/tink/json/Parser.hx:293: lines 293-295
			while (true) {
				#/Users/ut/haxe/haxe_libraries/tink_json/0.9.0/haxelib/src/tink/json/Parser.hx:294: characters 11-17
				if (\StringTools::fastCodeAt($_gthis->source, $_gthis->pos++) !== 34) {
					$_gthis->die("expected string", $_gthis->pos - 1);
				}
				$_gthis->skipString();
				while (($_gthis->pos < $_gthis->max) && (\StringTools::fastCodeAt($_gthis->source, $_gthis->pos) < 33)) {
					$_gthis->pos++;
				}
				$tmp4 = null;
				if (($_gthis->max > $_gthis->pos) && (\StringTools::fastCodeAt($_gthis->source, $_gthis->pos) === 58)) {
					$_gthis->pos += 1;
					while (($_gthis->pos < $_gthis->max) && (\StringTools::fastCodeAt($_gthis->source, $_gthis->pos) < 33)) {
						$_gthis->pos++;
					}
					$tmp4 = true;
				} else {
					$tmp4 = false;
				}
				if (!$tmp4) {
					$_gthis->die("Expected :");
				}
				$_gthis->skipValue();
				#/Users/ut/haxe/haxe_libraries/tink_json/0.9.0/haxelib/src/tink/json/Parser.hx:382: characters 9-29
				while (($this->pos < $this->max) && (\StringTools::fastCodeAt($this->source, $this->pos) < 33)) {
					$this->pos++;
				}
				#/Users/ut/haxe/haxe_libraries/tink_json/0.9.0/haxelib/src/tink/json/Parser.hx:380: lines 380-390
				$tmp5 = null;
				#/Users/ut/haxe/haxe_libraries/tink_json/0.9.0/haxelib/src/tink/json/Parser.hx:383: lines 383-389
				if (($this->max > $this->pos) && (\StringTools::fastCodeAt($this->source, $this->pos) === 44)) {
					#/Users/ut/haxe/haxe_libraries/tink_json/0.9.0/haxelib/src/tink/json/Parser.hx:384: characters 9-35
					$this->pos += 1;
					#/Users/ut/haxe/haxe_libraries/tink_json/0.9.0/haxelib/src/tink/json/Parser.hx:386: characters 11-31
					while (($this->pos < $this->max) && (\StringTools::fastCodeAt($this->source, $this->pos) < 33)) {
						$this->pos++;
					}
					#/Users/ut/haxe/haxe_libraries/tink_json/0.9.0/haxelib/src/tink/json/Parser.hx:380: lines 380-390
					$tmp5 = true;
				} else {
					$tmp5 = false;
				}
				#/Users/ut/haxe/haxe_libraries/tink_json/0.9.0/haxelib/src/tink/json/Parser.hx:293: lines 293-295
				if (!$tmp5) {
					break;
				}
			}
			#/Users/ut/haxe/haxe_libraries/tink_json/0.9.0/haxelib/src/tink/json/Parser.hx:382: characters 9-29
			while (($this->pos < $this->max) && (\StringTools::fastCodeAt($this->source, $this->pos) < 33)) {
				$this->pos++;
			}
			#/Users/ut/haxe/haxe_libraries/tink_json/0.9.0/haxelib/src/tink/json/Parser.hx:380: lines 380-390
			$tmp6 = null;
			#/Users/ut/haxe/haxe_libraries/tink_json/0.9.0/haxelib/src/tink/json/Parser.hx:383: lines 383-389
			if (($this->max > $this->pos) && (\StringTools::fastCodeAt($this->source, $this->pos) === 125)) {
				#/Users/ut/haxe/haxe_libraries/tink_json/0.9.0/haxelib/src/tink/json/Parser.hx:384: characters 9-35
				$this->pos += 1;
				#/Users/ut/haxe/haxe_libraries/tink_json/0.9.0/haxelib/src/tink/json/Parser.hx:380: lines 380-390
				$tmp6 = true;
			} else {
				$tmp6 = false;
			}
			#/Users/ut/haxe/haxe_libraries/tink_json/0.9.0/haxelib/src/tink/json/Parser.hx:367: characters 18-154
			if (!$tmp6) {
				#/Users/ut/haxe/haxe_libraries/tink_json/0.9.0/haxelib/src/tink/json/Parser.hx:367: characters 76-108
				$this->die("Expected }");
			}
		} else {
			#/Users/ut/haxe/haxe_libraries/tink_json/0.9.0/haxelib/src/tink/json/Parser.hx:310: lines 310-313
			if (($_g === 46) || ($_g === 45) || (($_g < 58) && ($_g > 47))) {
				#/Users/ut/haxe/haxe_libraries/tink_json/0.9.0/haxelib/src/tink/json/Parser.hx:311: characters 11-27
				$this->skipNumber($_g);
			} else {
				#/Users/ut/haxe/haxe_libraries/tink_json/0.9.0/haxelib/src/tink/json/Parser.hx:313: characters 11-28
				$this->invalidChar($_g);
			}
		}

	}

	/**
	 * @param int $from
	 * @param int $to
	 * 
	 * @return SliceData
	 */
	public function slice ($from, $to) {
		#/Users/ut/haxe/haxe_libraries/tink_json/0.9.0/haxelib/src/tink/json/Parser.hx:203: characters 5-48
		return new SliceData($this->source, $from, $to);
	}
}

Boot::registerClass(BasicParser::class, 'tink.json.BasicParser');

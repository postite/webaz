<?php
/**
 * Generated by Haxe 4.0.0-rc.2+77068e1
 * Haxe source file: /Users/ut/haxe/haxe_libraries/tink_core/1.20.0/haxelib/src/tink/core/Signal.hx
 */

namespace tink\core\_Signal;

use \tink\core\_Callback\LinkPair;
use \php\Boot;
use \tink\core\_Callback\LinkObject;
use \tink\core\_Callback\CallbackList_Impl_;
use \tink\core\_Callback\SimpleLink;
use \tink\core\SignalTrigger;
use \tink\core\SignalObject;

class Suspendable implements SignalObject {
	/**
	 * @var \Closure
	 */
	public $activate;
	/**
	 * @var LinkObject
	 */
	public $check;
	/**
	 * @var bool
	 */
	public $killed;
	/**
	 * @var \Closure
	 */
	public $suspend;
	/**
	 * @var SignalTrigger
	 */
	public $trigger;

	/**
	 * @param \Closure $activate
	 * 
	 * @return void
	 */
	public function __construct ($activate) {
		#/Users/ut/haxe/haxe_libraries/tink_core/1.20.0/haxelib/src/tink/core/Signal.hx:160: characters 43-48
		$this->killed = false;
		#/Users/ut/haxe/haxe_libraries/tink_core/1.20.0/haxelib/src/tink/core/Signal.hx:155: characters 34-53
		$this->trigger = new SignalTrigger();
		#/Users/ut/haxe/haxe_libraries/tink_core/1.20.0/haxelib/src/tink/core/Signal.hx:169: characters 5-29
		$this->activate = $activate;
	}

	/**
	 * @param \Closure $cb
	 * 
	 * @return LinkObject
	 */
	public function handle ($cb) {
		#/Users/ut/haxe/haxe_libraries/tink_core/1.20.0/haxelib/src/tink/core/Signal.hx:172: lines 172-184
		$_gthis = $this;
		#/Users/ut/haxe/haxe_libraries/tink_core/1.20.0/haxelib/src/tink/core/Signal.hx:173: characters 5-28
		if ($this->killed) {
			#/Users/ut/haxe/haxe_libraries/tink_core/1.20.0/haxelib/src/tink/core/Signal.hx:173: characters 17-28
			return null;
		}
		#/Users/ut/haxe/haxe_libraries/tink_core/1.20.0/haxelib/src/tink/core/Signal.hx:174: lines 174-175
		if ($this->trigger->handlers->length === 0) {
			#/Users/ut/haxe/haxe_libraries/tink_core/1.20.0/haxelib/src/tink/core/Signal.hx:175: characters 7-47
			$this->suspend = ($this->activate)(Boot::getInstanceClosure($this->trigger, 'trigger'));
		}
		#/Users/ut/haxe/haxe_libraries/tink_core/1.20.0/haxelib/src/tink/core/Signal.hx:178: lines 178-183
		$a = CallbackList_Impl_::add($this->trigger->handlers, $cb);
		$this1 = new SimpleLink(function ()  use (&$_gthis) {
			#/Users/ut/haxe/haxe_libraries/tink_core/1.20.0/haxelib/src/tink/core/Signal.hx:180: lines 180-183
			if ($_gthis->trigger->handlers->length === 0) {
				#/Users/ut/haxe/haxe_libraries/tink_core/1.20.0/haxelib/src/tink/core/Signal.hx:181: characters 13-22
				($_gthis->suspend)();
				#/Users/ut/haxe/haxe_libraries/tink_core/1.20.0/haxelib/src/tink/core/Signal.hx:182: characters 13-27
				$_gthis->suspend = null;
			}
		});
		#/Users/ut/haxe/haxe_libraries/tink_core/1.20.0/haxelib/src/tink/core/Signal.hx:178: lines 178-183
		return new LinkPair($a, $this1);
	}

	/**
	 * @return void
	 */
	public function kill () {
		#/Users/ut/haxe/haxe_libraries/tink_core/1.20.0/haxelib/src/tink/core/Signal.hx:163: lines 163-166
		if (!$this->killed) {
			#/Users/ut/haxe/haxe_libraries/tink_core/1.20.0/haxelib/src/tink/core/Signal.hx:164: characters 7-20
			$this->killed = true;
			#/Users/ut/haxe/haxe_libraries/tink_core/1.20.0/haxelib/src/tink/core/Signal.hx:165: characters 7-21
			$this->trigger = null;
		}
	}
}

Boot::registerClass(Suspendable::class, 'tink.core._Signal.Suspendable');

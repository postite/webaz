<?php
/**
 * Generated by Haxe 4.0.0-rc.1+1fdd3d5
 * Haxe source file: /Users/ut/haxe/haxe_libraries/tink_sql/0.0.0-alpha.0/github/485516a0ac3307cf25ff126f4feafff93a01878a/src/tink/sql/Query.hx
 */

namespace tink\sql;

use \php\Boot;
use \php\_Boot\HxEnum;

class AlterTableOperation extends HxEnum {
	/**
	 * @param object $col
	 * 
	 * @return AlterTableOperation
	 */
	static public function AddColumn ($col) {
		return new AlterTableOperation('AddColumn', 0, [$col]);
	}

	/**
	 * @param Key $key
	 * 
	 * @return AlterTableOperation
	 */
	static public function AddKey ($key) {
		return new AlterTableOperation('AddKey', 1, [$key]);
	}

	/**
	 * @param object $to
	 * @param object $from
	 * 
	 * @return AlterTableOperation
	 */
	static public function AlterColumn ($to, $from = null) {
		return new AlterTableOperation('AlterColumn', 2, [$to, $from]);
	}

	/**
	 * @param object $col
	 * 
	 * @return AlterTableOperation
	 */
	static public function DropColumn ($col) {
		return new AlterTableOperation('DropColumn', 3, [$col]);
	}

	/**
	 * @param Key $key
	 * 
	 * @return AlterTableOperation
	 */
	static public function DropKey ($key) {
		return new AlterTableOperation('DropKey', 4, [$key]);
	}

	/**
	 * Returns array of (constructorIndex => constructorName)
	 *
	 * @return string[]
	 */
	static public function __hx__list () {
		return [
			0 => 'AddColumn',
			1 => 'AddKey',
			2 => 'AlterColumn',
			3 => 'DropColumn',
			4 => 'DropKey',
		];
	}

	/**
	 * Returns array of (constructorName => parametersCount)
	 *
	 * @return int[]
	 */
	static public function __hx__paramsCount () {
		return [
			'AddColumn' => 1,
			'AddKey' => 1,
			'AlterColumn' => 2,
			'DropColumn' => 1,
			'DropKey' => 1,
		];
	}
}

Boot::registerClass(AlterTableOperation::class, 'tink.sql.AlterTableOperation');

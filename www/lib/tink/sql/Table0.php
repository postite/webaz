<?php
/**
 * Generated by Haxe 4.0.0-rc.1+1fdd3d5
 * Haxe source file: /Users/ut/haxe/haxe_libraries/tink_sql/0.0.0-alpha.0/github/485516a0ac3307cf25ff126f4feafff93a01878a/src/tink/sql/macros/TableBuilder.hx
 */

namespace tink\sql;

use \php\_Boot\HxAnon;
use \php\Boot;
use \tink\sql\_Expr\Expr_Impl_;

class Table0 extends TableSource {
	/**
	 * @var \Array_hx
	 */
	static public $COLUMNS;
	/**
	 * @var \Array_hx
	 */
	static public $COLUMN_NAMES;
	/**
	 * @var \Array_hx
	 */
	static public $KEYS;

	/**
	 * @param Connection $cnx
	 * @param string $tableName
	 * @param string $alias
	 * 
	 * @return void
	 */
	public function __construct ($cnx, $tableName, $alias = null) {
		#/Users/ut/haxe/haxe_libraries/tink_sql/0.0.0-alpha.0/github/485516a0ac3307cf25ff126f4feafff93a01878a/src/tink/sql/macros/TableBuilder.hx:59: characters 29-75
		$this1 = Expr_Impl_::ofData(ExprData::EField($tableName, "desc"));
		$this2 = Expr_Impl_::ofData(ExprData::EField($tableName, "id"));
		$this3 = Expr_Impl_::ofData(ExprData::EField($tableName, "imageUrl"));
		$this4 = Expr_Impl_::ofData(ExprData::EField($tableName, "length"));
		$this5 = Expr_Impl_::ofData(ExprData::EField($tableName, "soundUrl"));
		$this6 = Expr_Impl_::ofData(ExprData::EField($tableName, "title"));
		#/Users/ut/haxe/haxe_libraries/tink_sql/0.0.0-alpha.0/github/485516a0ac3307cf25ff126f4feafff93a01878a/src/tink/sql/macros/TableBuilder.hx:188: characters 17-121
		parent::__construct($cnx, $tableName, $alias, new HxAnon([
			"desc" => $this1,
			"id" => $this2,
			"imageUrl" => $this3,
			"length" => $this4,
			"soundUrl" => $this5,
			"title" => $this6,
		]));
	}

	/**
	 * @return \Array_hx
	 */
	public function columnNames () {
		#/Users/ut/haxe/haxe_libraries/tink_sql/0.0.0-alpha.0/github/485516a0ac3307cf25ff126f4feafff93a01878a/src/tink/sql/macros/TableBuilder.hx:197: characters 17-36
		return Table0::$COLUMN_NAMES;
	}

	/**
	 * @return \Array_hx
	 */
	public function getColumns () {
		#/Users/ut/haxe/haxe_libraries/tink_sql/0.0.0-alpha.0/github/485516a0ac3307cf25ff126f4feafff93a01878a/src/tink/sql/macros/TableBuilder.hx:195: characters 17-31
		return Table0::$COLUMNS;
	}

	/**
	 * @return \Array_hx
	 */
	public function getKeys () {
		#/Users/ut/haxe/haxe_libraries/tink_sql/0.0.0-alpha.0/github/485516a0ac3307cf25ff126f4feafff93a01878a/src/tink/sql/macros/TableBuilder.hx:199: characters 17-28
		return Table0::$KEYS;
	}

	/**
	 * @internal
	 * @access private
	 */
	static public function __hx__init ()
	{
		static $called = false;
		if ($called) return;
		$called = true;


		self::$COLUMN_NAMES = \Array_hx::wrap([
			"desc",
			"id",
			"imageUrl",
			"length",
			"soundUrl",
			"title",
		]);
		self::$COLUMNS = \Array_hx::wrap([
			new HxAnon([
				"name" => "desc",
				"nullable" => true,
				"type" => DataType::DText(TextSize::Default(), null),
			]),
			new HxAnon([
				"name" => "id",
				"nullable" => false,
				"type" => DataType::DInt(IntSize::Default(), false, true, null),
			]),
			new HxAnon([
				"name" => "imageUrl",
				"nullable" => true,
				"type" => DataType::DString(255, null),
			]),
			new HxAnon([
				"name" => "length",
				"nullable" => false,
				"type" => DataType::DInt(IntSize::Small(), true, false, null),
			]),
			new HxAnon([
				"name" => "soundUrl",
				"nullable" => false,
				"type" => DataType::DString(255, null),
			]),
			new HxAnon([
				"name" => "title",
				"nullable" => false,
				"type" => DataType::DString(255, null),
			]),
		]);
		self::$KEYS = \Array_hx::wrap([Key::Primary(\Array_hx::wrap(["id"]))]);
	}
}

Boot::registerClass(Table0::class, 'tink.sql.Table0');
Table0::__hx__init();

<?php
/**
 * Generated by Haxe 4.0.0-rc.1+1fdd3d5
 * Haxe source file: /Users/ut/haxe/haxe_libraries/tink_sql/0.0.0-alpha.0/github/485516a0ac3307cf25ff126f4feafff93a01878a/src/tink/sql/Dataset.hx
 */

namespace tink\sql;

use \php\_Boot\HxAnon;
use \tink\core\_Future\SyncFuture;
use \php\Boot;
use \tink\core\Outcome;
use \tink\core\_Lazy\LazyConst;
use \tink\streams\_RealStream\RealStream_Impl_;
use \tink\core\_Promise\Promise_Impl_;
use \tink\core\_Future\FutureObject;

class Selected extends Limitable {
	/**
	 * @var object
	 */
	public $condition;
	/**
	 * @var mixed
	 */
	public $fields;
	/**
	 * @var \Array_hx
	 */
	public $grouped;
	/**
	 * @var \Array_hx
	 */
	public $order;
	/**
	 * @var mixed
	 */
	public $selection;
	/**
	 * @var Target
	 */
	public $target;
	/**
	 * @var \Closure
	 */
	public $toCondition;

	/**
	 * @param Connection $cnx
	 * @param mixed $fields
	 * @param Target $target
	 * @param \Closure $toCondition
	 * @param object $condition
	 * @param mixed $selection
	 * @param \Array_hx $grouped
	 * @param \Array_hx $order
	 * 
	 * @return void
	 */
	public function __construct ($cnx, $fields, $target, $toCondition, $condition = null, $selection = null, $grouped = null, $order = null) {
		#/Users/ut/haxe/haxe_libraries/tink_sql/0.0.0-alpha.0/github/485516a0ac3307cf25ff126f4feafff93a01878a/src/tink/sql/Dataset.hx:79: characters 57-59
		$this->condition = new HxAnon();
		#/Users/ut/haxe/haxe_libraries/tink_sql/0.0.0-alpha.0/github/485516a0ac3307cf25ff126f4feafff93a01878a/src/tink/sql/Dataset.hx:84: characters 5-15
		parent::__construct($cnx);
		#/Users/ut/haxe/haxe_libraries/tink_sql/0.0.0-alpha.0/github/485516a0ac3307cf25ff126f4feafff93a01878a/src/tink/sql/Dataset.hx:85: characters 5-25
		$this->fields = $fields;
		#/Users/ut/haxe/haxe_libraries/tink_sql/0.0.0-alpha.0/github/485516a0ac3307cf25ff126f4feafff93a01878a/src/tink/sql/Dataset.hx:86: characters 5-25
		$this->target = $target;
		#/Users/ut/haxe/haxe_libraries/tink_sql/0.0.0-alpha.0/github/485516a0ac3307cf25ff126f4feafff93a01878a/src/tink/sql/Dataset.hx:87: characters 5-35
		$this->toCondition = $toCondition;
		#/Users/ut/haxe/haxe_libraries/tink_sql/0.0.0-alpha.0/github/485516a0ac3307cf25ff126f4feafff93a01878a/src/tink/sql/Dataset.hx:88: characters 5-62
		$this->condition = ($condition === null ? new HxAnon() : $condition);
		#/Users/ut/haxe/haxe_libraries/tink_sql/0.0.0-alpha.0/github/485516a0ac3307cf25ff126f4feafff93a01878a/src/tink/sql/Dataset.hx:89: characters 5-31
		$this->selection = $selection;
		#/Users/ut/haxe/haxe_libraries/tink_sql/0.0.0-alpha.0/github/485516a0ac3307cf25ff126f4feafff93a01878a/src/tink/sql/Dataset.hx:90: characters 5-27
		$this->grouped = $grouped;
		#/Users/ut/haxe/haxe_libraries/tink_sql/0.0.0-alpha.0/github/485516a0ac3307cf25ff126f4feafff93a01878a/src/tink/sql/Dataset.hx:91: characters 5-23
		$this->order = $order;
	}

	/**
	 * @return FutureObject
	 */
	public function count () {
		#/Users/ut/haxe/haxe_libraries/tink_sql/0.0.0-alpha.0/github/485516a0ac3307cf25ff126f4feafff93a01878a/src/tink/sql/Dataset.hx:107: characters 13-19
		$tmp = $this->target;
		#/Users/ut/haxe/haxe_libraries/tink_sql/0.0.0-alpha.0/github/485516a0ac3307cf25ff126f4feafff93a01878a/src/tink/sql/Dataset.hx:106: lines 106-115
		return Promise_Impl_::next(RealStream_Impl_::collect($this->cnx->execute(Query::Select(new HxAnon([
			"from" => $tmp,
			"selection" => new HxAnon(["count" => Functions::count()]),
			"where" => $this->condition->where,
			"having" => $this->condition->having,
			"groupBy" => $this->grouped,
			"orderBy" => $this->order,
		])))), function ($v) {
			#/Users/ut/haxe/haxe_libraries/tink_sql/0.0.0-alpha.0/github/485516a0ac3307cf25ff126f4feafff93a01878a/src/tink/sql/Dataset.hx:115: characters 26-59
			return new SyncFuture(new LazyConst(Outcome::Success(($v->arr[0] ?? null)->count)));
		});
	}

	/**
	 * @param object $limit
	 * 
	 * @return Query
	 */
	public function toQuery ($limit = null) {
		#/Users/ut/haxe/haxe_libraries/tink_sql/0.0.0-alpha.0/github/485516a0ac3307cf25ff126f4feafff93a01878a/src/tink/sql/Dataset.hx:95: lines 95-103
		return Query::Select(new HxAnon([
			"from" => $this->target,
			"selection" => $this->selection,
			"where" => $this->condition->where,
			"having" => $this->condition->having,
			"limit" => $limit,
			"groupBy" => $this->grouped,
			"orderBy" => $this->order,
		]));
	}
}

Boot::registerClass(Selected::class, 'tink.sql.Selected');

<?php
/**
 * Generated by Haxe 4.0.0-rc.1+1fdd3d5
 * Haxe source file: /Users/ut/haxe/haxe_libraries/tink_sql/0.0.0-alpha.0/github/485516a0ac3307cf25ff126f4feafff93a01878a/src/tink/sql/Info.hx
 */

namespace tink\sql;

use \php\Boot;
use \php\_Boot\HxEnum;

class Key extends HxEnum {
	/**
	 * @param string $name
	 * @param \Array_hx $fields
	 * 
	 * @return Key
	 */
	static public function Index ($name, $fields) {
		return new Key('Index', 2, [$name, $fields]);
	}

	/**
	 * @param \Array_hx $fields
	 * 
	 * @return Key
	 */
	static public function Primary ($fields) {
		return new Key('Primary', 0, [$fields]);
	}

	/**
	 * @param string $name
	 * @param \Array_hx $fields
	 * 
	 * @return Key
	 */
	static public function Unique ($name, $fields) {
		return new Key('Unique', 1, [$name, $fields]);
	}

	/**
	 * Returns array of (constructorIndex => constructorName)
	 *
	 * @return string[]
	 */
	static public function __hx__list () {
		return [
			2 => 'Index',
			0 => 'Primary',
			1 => 'Unique',
		];
	}

	/**
	 * Returns array of (constructorName => parametersCount)
	 *
	 * @return int[]
	 */
	static public function __hx__paramsCount () {
		return [
			'Index' => 2,
			'Primary' => 1,
			'Unique' => 2,
		];
	}
}

Boot::registerClass(Key::class, 'tink.sql.Key');

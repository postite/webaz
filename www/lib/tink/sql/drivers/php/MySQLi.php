<?php
/**
 * Generated by Haxe 4.0.0-rc.1+1fdd3d5
 * Haxe source file: /Users/ut/haxe/haxe_libraries/tink_sql/0.0.0-alpha.0/github/485516a0ac3307cf25ff126f4feafff93a01878a/src/tink/sql/drivers/php/MySQLi.hx
 */

namespace tink\sql\drivers\php;

use \php\Boot;
use \tink\sql\Connection;
use \tink\sql\Driver;

class MySQLi implements Driver {
	/**
	 * @var object
	 */
	public $settings;

	/**
	 * @param object $settings
	 * 
	 * @return void
	 */
	public function __construct ($settings) {
		#/Users/ut/haxe/haxe_libraries/tink_sql/0.0.0-alpha.0/github/485516a0ac3307cf25ff126f4feafff93a01878a/src/tink/sql/drivers/php/MySQLi.hx:23: characters 5-29
		$this->settings = $settings;
	}

	/**
	 * @param string $name
	 * @param mixed $info
	 * 
	 * @return Connection
	 */
	public function open ($name, $info) {
		#/Users/ut/haxe/haxe_libraries/tink_sql/0.0.0-alpha.0/github/485516a0ac3307cf25ff126f4feafff93a01878a/src/tink/sql/drivers/php/MySQLi.hx:27: lines 27-30
		$cnx = new \mysqli($this->settings->host, $this->settings->user, $this->settings->password, $name, $this->settings->port);
		#/Users/ut/haxe/haxe_libraries/tink_sql/0.0.0-alpha.0/github/485516a0ac3307cf25ff126f4feafff93a01878a/src/tink/sql/drivers/php/MySQLi.hx:31: characters 5-68
		if ($this->settings->charset !== null) {
			#/Users/ut/haxe/haxe_libraries/tink_sql/0.0.0-alpha.0/github/485516a0ac3307cf25ff126f4feafff93a01878a/src/tink/sql/drivers/php/MySQLi.hx:31: characters 35-68
			$cnx->set_charset($this->settings->charset);
		}
		#/Users/ut/haxe/haxe_libraries/tink_sql/0.0.0-alpha.0/github/485516a0ac3307cf25ff126f4feafff93a01878a/src/tink/sql/drivers/php/MySQLi.hx:32: characters 5-43
		return new MySQLiConnection($info, $cnx);
	}
}

Boot::registerClass(MySQLi::class, 'tink.sql.drivers.php.MySQLi');

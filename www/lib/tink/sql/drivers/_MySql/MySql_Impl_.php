<?php
/**
 * Generated by Haxe 4.0.0-rc.1+1fdd3d5
 * Haxe source file: /Users/ut/haxe/haxe_libraries/tink_sql/0.0.0-alpha.0/github/485516a0ac3307cf25ff126f4feafff93a01878a/src/tink/sql/drivers/MySql.hx
 */

namespace tink\sql\drivers\_MySql;

use \php\Boot;
use \tink\sql\drivers\php\MySQLi;

final class MySql_Impl_ {
	/**
	 * @var MySqlSanitizer
	 */
	static public $sanitizer;

	/**
	 * @param object $settings
	 * 
	 * @return MySQLi
	 */
	static public function _new ($settings) {
		#/Users/ut/haxe/haxe_libraries/tink_sql/0.0.0-alpha.0/github/485516a0ac3307cf25ff126f4feafff93a01878a/src/tink/sql/drivers/MySql.hx:79: character 3
		$this1 = new MySQLi($settings);
		return $this1;
	}

	/**
	 * @param mixed $_
	 * 
	 * @return MySqlSanitizer
	 */
	static public function getSanitizer ($_) {
		#/Users/ut/haxe/haxe_libraries/tink_sql/0.0.0-alpha.0/github/485516a0ac3307cf25ff126f4feafff93a01878a/src/tink/sql/drivers/MySql.hx:86: characters 5-21
		return MySql_Impl_::$sanitizer;
	}

	/**
	 * @internal
	 * @access private
	 */
	static public function __hx__init ()
	{
		static $called = false;
		if ($called) return;
		$called = true;


		self::$sanitizer = new MySqlSanitizer();
	}
}

Boot::registerClass(MySql_Impl_::class, 'tink.sql.drivers._MySql.MySql_Impl_');
MySql_Impl_::__hx__init();

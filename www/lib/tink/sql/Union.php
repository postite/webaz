<?php
/**
 * Generated by Haxe 4.0.0-rc.1+1fdd3d5
 * Haxe source file: /Users/ut/haxe/haxe_libraries/tink_sql/0.0.0-alpha.0/github/485516a0ac3307cf25ff126f4feafff93a01878a/src/tink/sql/Dataset.hx
 */

namespace tink\sql;

use \php\_Boot\HxAnon;
use \php\Boot;

class Union extends Limitable {
	/**
	 * @var bool
	 */
	public $distinct;
	/**
	 * @var Dataset
	 */
	public $left;
	/**
	 * @var Dataset
	 */
	public $right;

	/**
	 * @param Connection $cnx
	 * @param Dataset $left
	 * @param Dataset $right
	 * @param bool $distinct
	 * 
	 * @return void
	 */
	public function __construct ($cnx, $left, $right, $distinct) {
		#/Users/ut/haxe/haxe_libraries/tink_sql/0.0.0-alpha.0/github/485516a0ac3307cf25ff126f4feafff93a01878a/src/tink/sql/Dataset.hx:127: characters 5-15
		parent::__construct($cnx);
		#/Users/ut/haxe/haxe_libraries/tink_sql/0.0.0-alpha.0/github/485516a0ac3307cf25ff126f4feafff93a01878a/src/tink/sql/Dataset.hx:128: characters 5-21
		$this->left = $left;
		#/Users/ut/haxe/haxe_libraries/tink_sql/0.0.0-alpha.0/github/485516a0ac3307cf25ff126f4feafff93a01878a/src/tink/sql/Dataset.hx:129: characters 5-23
		$this->right = $right;
		#/Users/ut/haxe/haxe_libraries/tink_sql/0.0.0-alpha.0/github/485516a0ac3307cf25ff126f4feafff93a01878a/src/tink/sql/Dataset.hx:130: characters 5-29
		$this->distinct = $distinct;
	}

	/**
	 * @param object $limit
	 * 
	 * @return Query
	 */
	public function toQuery ($limit = null) {
		#/Users/ut/haxe/haxe_libraries/tink_sql/0.0.0-alpha.0/github/485516a0ac3307cf25ff126f4feafff93a01878a/src/tink/sql/Dataset.hx:135: characters 13-27
		$tmp = $this->left->toQuery();
		#/Users/ut/haxe/haxe_libraries/tink_sql/0.0.0-alpha.0/github/485516a0ac3307cf25ff126f4feafff93a01878a/src/tink/sql/Dataset.hx:136: characters 14-29
		$tmp1 = $this->right->toQuery();
		#/Users/ut/haxe/haxe_libraries/tink_sql/0.0.0-alpha.0/github/485516a0ac3307cf25ff126f4feafff93a01878a/src/tink/sql/Dataset.hx:134: lines 134-139
		return Query::Union(new HxAnon([
			"left" => $tmp,
			"right" => $tmp1,
			"distinct" => $this->distinct,
			"limit" => $limit,
		]));
	}
}

Boot::registerClass(Union::class, 'tink.sql.Union');

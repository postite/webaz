<?php
/**
 * Generated by Haxe 4.0.0-rc.1+1fdd3d5
 * Haxe source file: /Users/ut/haxe/haxe_libraries/tink_sql/0.0.0-alpha.0/github/485516a0ac3307cf25ff126f4feafff93a01878a/src/tink/sql/Dataset.hx
 */

namespace tink\sql;

use \php\Boot;

class Selectable extends FilterableWhere {
	/**
	 * @param Connection $cnx
	 * @param mixed $fields
	 * @param Target $target
	 * @param \Closure $toCondition
	 * @param object $condition
	 * @param mixed $selection
	 * @param \Array_hx $grouped
	 * @param \Array_hx $order
	 * 
	 * @return void
	 */
	public function __construct ($cnx, $fields, $target, $toCondition, $condition = null, $selection = null, $grouped = null, $order = null) {
		#/Users/ut/haxe/haxe_libraries/tink_sql/0.0.0-alpha.0/github/485516a0ac3307cf25ff126f4feafff93a01878a/src/tink/sql/Dataset.hx:9: lines 9-30
		parent::__construct($cnx, $fields, $target, $toCondition, $condition, $selection, $grouped, $order);
	}

	/**
	 * @param mixed $selection
	 * 
	 * @return FilterableWhere
	 */
	public function _select ($selection) {
		#/Users/ut/haxe/haxe_libraries/tink_sql/0.0.0-alpha.0/github/485516a0ac3307cf25ff126f4feafff93a01878a/src/tink/sql/Dataset.hx:19: characters 5-92
		return new FilterableWhere($this->cnx, $this->fields, $this->target, $this->toCondition, $this->condition, $selection);
	}
}

Boot::registerClass(Selectable::class, 'tink.sql.Selectable');

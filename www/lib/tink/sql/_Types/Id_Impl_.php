<?php
/**
 * Generated by Haxe 4.0.0-rc.1+1fdd3d5
 * Haxe source file: /Users/ut/haxe/haxe_libraries/tink_sql/0.0.0-alpha.0/github/485516a0ac3307cf25ff126f4feafff93a01878a/src/tink/sql/Types.hx
 */

namespace tink\sql\_Types;

use \tink\sql\ExprData;
use \tink\json\_Representation\Representation_Impl_;
use \tink\sql\ValueType;
use \php\Boot;
use \tink\_Stringly\Stringly_Impl_;
use \tink\sql\_Expr\Expr_Impl_;

final class Id_Impl_ {
	/**
	 * @param int $v
	 * 
	 * @return int
	 */
	static public function _new ($v) {
		#/Users/ut/haxe/haxe_libraries/tink_sql/0.0.0-alpha.0/github/485516a0ac3307cf25ff126f4feafff93a01878a/src/tink/sql/Types.hx:30: character 3
		return $v;
	}

	/**
	 * @param int $i
	 * 
	 * @return int
	 */
	static public function ofInt ($i) {
		#/Users/ut/haxe/haxe_libraries/tink_sql/0.0.0-alpha.0/github/485516a0ac3307cf25ff126f4feafff93a01878a/src/tink/sql/Types.hx:37: characters 12-21
		return $i;
	}

	/**
	 * @param int $r
	 * 
	 * @return int
	 */
	static public function ofRe ($r) {
		#/Users/ut/haxe/haxe_libraries/tink_sql/0.0.0-alpha.0/github/485516a0ac3307cf25ff126f4feafff93a01878a/src/tink/sql/Types.hx:46: characters 12-27
		return Representation_Impl_::get($r);
	}

	/**
	 * @param string $s
	 * 
	 * @return int
	 */
	static public function ofStringly ($s) {
		#/Users/ut/haxe/haxe_libraries/tink_sql/0.0.0-alpha.0/github/485516a0ac3307cf25ff126f4feafff93a01878a/src/tink/sql/Types.hx:34: characters 12-21
		return Stringly_Impl_::toInt($s);
	}

	/**
	 * @param int $this
	 * 
	 * @return ExprData
	 */
	static public function toExpr ($this1) {
		#/Users/ut/haxe/haxe_libraries/tink_sql/0.0.0-alpha.0/github/485516a0ac3307cf25ff126f4feafff93a01878a/src/tink/sql/Types.hx:43: characters 5-57
		return Expr_Impl_::ofData(ExprData::EValue($this1, ValueType::VInt()));
	}

	/**
	 * @param int $this
	 * 
	 * @return int
	 */
	static public function toRep ($this1) {
		#/Users/ut/haxe/haxe_libraries/tink_sql/0.0.0-alpha.0/github/485516a0ac3307cf25ff126f4feafff93a01878a/src/tink/sql/Types.hx:49: characters 12-36
		return $this1;
	}

	/**
	 * @param int $this
	 * 
	 * @return string
	 */
	static public function toString ($this1) {
		#/Users/ut/haxe/haxe_libraries/tink_sql/0.0.0-alpha.0/github/485516a0ac3307cf25ff126f4feafff93a01878a/src/tink/sql/Types.hx:40: characters 5-28
		return \Std::string($this1);
	}
}

Boot::registerClass(Id_Impl_::class, 'tink.sql._Types.Id_Impl_');

<?php
/**
 * Generated by Haxe 4.0.0-rc.1+1fdd3d5
 * Haxe source file: /Users/ut/haxe/haxe_libraries/tink_sql/0.0.0-alpha.0/github/485516a0ac3307cf25ff126f4feafff93a01878a/src/tink/sql/Limit.hx
 */

namespace tink\sql\_Limit;

use \php\_Boot\HxAnon;
use \php\Boot;

final class Limit_Impl_ {
	/**
	 * @param int $i
	 * 
	 * @return object
	 */
	static public function ofInt ($i) {
		#/Users/ut/haxe/haxe_libraries/tink_sql/0.0.0-alpha.0/github/485516a0ac3307cf25ff126f4feafff93a01878a/src/tink/sql/Limit.hx:15: characters 5-35
		return new HxAnon([
			"limit" => $i,
			"offset" => 0,
		]);
	}

	/**
	 * @param \IntIterator $i
	 * 
	 * @return object
	 */
	static public function ofIter ($i) {
		#/Users/ut/haxe/haxe_libraries/tink_sql/0.0.0-alpha.0/github/485516a0ac3307cf25ff126f4feafff93a01878a/src/tink/sql/Limit.hx:12: characters 5-59
		return new HxAnon([
			"limit" => $i->min,
			"offset" => $i->max,
		]);
	}
}

Boot::registerClass(Limit_Impl_::class, 'tink.sql._Limit.Limit_Impl_');

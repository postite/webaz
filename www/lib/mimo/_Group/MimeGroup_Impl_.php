<?php
/**
 * Generated by Haxe 4.0.0-rc.2+77068e1
 * Haxe source file: /Users/ut/Documents/LAB/postite_mimo/src/mimo/Group.hx
 */

namespace mimo\_Group;

use \php\_Boot\HxAnon;
use \php\Boot;
use \mimo\Group;

final class MimeGroup_Impl_ {
	/**
	 * @var \Array_hx
	 */
	static public $docs;
	/**
	 * @var \Array_hx
	 */
	static public $images;
	/**
	 * @var \Array_hx
	 */
	static public $sons;
	/**
	 * @var \Array_hx
	 */
	static public $video;

	/**
	 * @param string $a
	 * 
	 * @return string
	 */
	static public function _new ($a) {
		#/Users/ut/Documents/LAB/postite_mimo/src/mimo/Group.hx:29: characters 9-20
		return $a;
	}

	/**
	 * @param string $this
	 * 
	 * @return Group
	 */
	static public function toGroup ($this1) {
		#/Users/ut/Documents/LAB/postite_mimo/src/mimo/Group.hx:34: characters 9-49
		if (MimeGroup_Impl_::$images->indexOf($this1) !== -1) {
			#/Users/ut/Documents/LAB/postite_mimo/src/mimo/Group.hx:34: characters 38-49
			return Group::IMGS();
		}
		#/Users/ut/Documents/LAB/postite_mimo/src/mimo/Group.hx:35: characters 9-48
		if (MimeGroup_Impl_::$video->indexOf($this1) !== -1) {
			#/Users/ut/Documents/LAB/postite_mimo/src/mimo/Group.hx:35: characters 37-48
			return Group::VIDS();
		}
		#/Users/ut/Documents/LAB/postite_mimo/src/mimo/Group.hx:36: characters 9-47
		if (MimeGroup_Impl_::$docs->indexOf($this1) !== -1) {
			#/Users/ut/Documents/LAB/postite_mimo/src/mimo/Group.hx:36: characters 36-47
			return Group::DOCS();
		}
		#/Users/ut/Documents/LAB/postite_mimo/src/mimo/Group.hx:37: characters 9-47
		if (MimeGroup_Impl_::$sons->indexOf($this1) !== -1) {
			#/Users/ut/Documents/LAB/postite_mimo/src/mimo/Group.hx:37: characters 36-47
			return Group::SONS();
		}
		#/Users/ut/Documents/LAB/postite_mimo/src/mimo/Group.hx:38: characters 9-22
		return Group::AUTRES();
	}

	/**
	 * @internal
	 * @access private
	 */
	static public function __hx__init ()
	{
		static $called = false;
		if ($called) return;
		$called = true;


		self::$images = \Array_hx::wrap([
			"image/gif",
			"image/jpeg",
			"image/jpeg",
			"image/bmp",
			"image/png",
		]);
		self::$docs = \Array_hx::wrap([
			"application/pdf",
			"application/rtf",
			"text/plain",
			"application/msword",
			"multipart/x-zip",
			"application/vnd.oasis.opendocument.text",
		]);
		self::$video = \Array_hx::wrap([
			"video/quicktime",
			"video/avi",
			"video/msvideo",
			"video/x-msvideo",
		]);
		self::$sons = \Array_hx::wrap([
			"audio/wav",
			"audio/mpeg3",
			"audio/ogg",
		]);
	}
}

Boot::registerClass(MimeGroup_Impl_::class, 'mimo._Group.MimeGroup_Impl_');
Boot::registerMeta(MimeGroup_Impl_::class, new HxAnon(["statics" => new HxAnon(["toGroup" => new HxAnon(["to" => null])])]));
MimeGroup_Impl_::__hx__init();

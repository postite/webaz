<?php
/**
 * Generated by Haxe 4.0.0-rc.2+77068e1
 * Haxe source file: /Users/ut/Documents/LAB/postite_mimo/src/mimo/Group.hx
 */

namespace mimo;

use \php\Boot;
use \php\_Boot\HxEnum;

class Group extends HxEnum {
	/**
	 * @return Group
	 */
	static public function AUTRES () {
		static $inst = null;
		if (!$inst) $inst = new Group('AUTRES', 5, []);
		return $inst;
	}

	/**
	 * @return Group
	 */
	static public function CARTES () {
		static $inst = null;
		if (!$inst) $inst = new Group('CARTES', 4, []);
		return $inst;
	}

	/**
	 * @return Group
	 */
	static public function DOCS () {
		static $inst = null;
		if (!$inst) $inst = new Group('DOCS', 2, []);
		return $inst;
	}

	/**
	 * @return Group
	 */
	static public function IMGS () {
		static $inst = null;
		if (!$inst) $inst = new Group('IMGS', 0, []);
		return $inst;
	}

	/**
	 * @return Group
	 */
	static public function SONS () {
		static $inst = null;
		if (!$inst) $inst = new Group('SONS', 3, []);
		return $inst;
	}

	/**
	 * @return Group
	 */
	static public function VIDS () {
		static $inst = null;
		if (!$inst) $inst = new Group('VIDS', 1, []);
		return $inst;
	}

	/**
	 * Returns array of (constructorIndex => constructorName)
	 *
	 * @return string[]
	 */
	static public function __hx__list () {
		return [
			5 => 'AUTRES',
			4 => 'CARTES',
			2 => 'DOCS',
			0 => 'IMGS',
			3 => 'SONS',
			1 => 'VIDS',
		];
	}

	/**
	 * Returns array of (constructorName => parametersCount)
	 *
	 * @return int[]
	 */
	static public function __hx__paramsCount () {
		return [
			'AUTRES' => 0,
			'CARTES' => 0,
			'DOCS' => 0,
			'IMGS' => 0,
			'SONS' => 0,
			'VIDS' => 0,
		];
	}
}

Boot::registerClass(Group::class, 'mimo.Group');
